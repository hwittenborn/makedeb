From: Leo Puvilland <lpuvilla0001@mymail.lausd.net>
Subject: Debian packaging added

* Upstream changes patched in a PR.
* Fixed PKGBUILDs
* Makefile added

diff --color -Nru makedeb-7.1.2-bugfix1-stable/docker/Dockerfile makedeb/docker/Dockerfile
--- makedeb-7.1.2-bugfix1-stable/docker/Dockerfile	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/docker/Dockerfile	1969-12-31 16:00:00.000000000 -0800
@@ -1,18 +0,0 @@
-FROM ubuntu
-
-SHELL ["/bin/bash", "-c"]
-ARG DEBIAN_FRONTEND=noninteractive
-ARG package="makedeb"
-
-RUN apt-get update
-RUN apt-get dist-upgrade -y
-
-RUN apt-get install wget curl jq gpg git ssh sudo -y
-
-RUN wget -qO - 'https://proget.hunterwittenborn.com/debian-feeds/makedeb.pub' | gpg --dearmor | tee /usr/share/keyrings/makedeb-archive-keyring.gpg &> /dev/null
-RUN echo 'deb [signed-by=/usr/share/keyrings/makedeb-archive-keyring.gpg arch=all] https://proget.hunterwittenborn.com/ makedeb main' | tee /etc/apt/sources.list.d/makedeb.list
-
-RUN apt-get update
-RUN apt-get install "${package}" -y
-
-ENTRYPOINT ["/bin/bash"]
diff --color -Nru makedeb-7.1.2-bugfix1-stable/.drone/drone.jsonnet makedeb/.drone/drone.jsonnet
--- makedeb-7.1.2-bugfix1-stable/.drone/drone.jsonnet	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/.drone/drone.jsonnet	2021-11-01 13:35:59.976249297 -0700
@@ -14,39 +14,39 @@
 		},
 
 		commands: [
-			"sudo apt-get install openssh-client git -y",
+			"sudo apt-get install openssh-client git -yq",
 			".drone/scripts/create_tag.sh"
 		]
 	}]
 };
 
 local buildAndPublish(package_name, tag) = {
-    name: "build-and-publish-" + tag,
-    kind: "pipeline",
-    type: "docker",
-    trigger: {branch: [tag]},
+	name: "build-and-publish-" + tag,
+	kind: "pipeline",
+	type: "docker",
+	trigger: {branch: [tag]},
 	depends_on: ["create-tag-" + tag],
-    steps: [
-        {
-            name: "build-debian-package",
-            image: "proget.hunterwittenborn.com/docker/makedeb/makedeb-alpha:ubuntu-focal",
-            environment: {release_type: tag, package_name: package_name},
-            commands: [
-							"sudo apt-get install sed grep mawk git -y",
-							".drone/scripts/build.sh"
-						]
-        },
-
-        {
-            name: "publish-proget",
-            image: "proget.hunterwittenborn.com/docker/makedeb/makedeb-alpha:ubuntu-focal",
-            environment: {proget_api_key: {from_secret: "proget_api_key"}},
-            commands: [
-							"sudo apt-get install sed grep curl findutils -y",
-							".drone/scripts/publish.sh"
-						]
-        }
-    ]
+	steps: [
+		{
+			name: "build-debian-package",
+			image: "proget.hunterwittenborn.com/docker/makedeb/makedeb-alpha:ubuntu-focal",
+			environment: {release_type: tag, package_name: package_name},
+			commands: [
+				"sudo apt-get install sed grep mawk git -yq",
+				".drone/scripts/build.sh"
+			]
+        	},
+
+		{
+			name: "publish-proget",
+			image: "proget.hunterwittenborn.com/docker/makedeb/makedeb-alpha:ubuntu-focal",
+			environment: {proget_api_key: {from_secret: "proget_api_key"}},
+			commands: [
+				"sudo apt-get install sed grep curl findutils -yq",
+				".drone/scripts/publish.sh"
+			]
+		}
+	]
 };
 
 local userRepoPublish(package_name, tag, user_repo) = {
@@ -71,7 +71,7 @@
 		},
 
 		commands: [
-			"sudo apt-get install git ssh grep mawk sed -y",
+			"sudo apt-get install git ssh grep mawk sed -yq",
 			".drone/scripts/user-repo.sh"
 		]
 	}]
@@ -108,9 +108,9 @@
 	createTag("beta"),
 	createTag("alpha"),
 
-  buildAndPublish("makedeb", "stable"),
-  buildAndPublish("makedeb-beta", "beta"),
-  buildAndPublish("makedeb-alpha", "alpha"),
+	buildAndPublish("makedeb", "stable"),
+	buildAndPublish("makedeb-beta", "beta"),
+	buildAndPublish("makedeb-alpha", "alpha"),
 
 	userRepoPublish("makedeb", "stable", "mpr"),
 	userRepoPublish("makedeb-beta", "beta", "mpr"),
diff --color -Nru makedeb-7.1.2-bugfix1-stable/.drone/scripts/build.sh makedeb/.drone/scripts/build.sh
--- makedeb-7.1.2-bugfix1-stable/.drone/scripts/build.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/.drone/scripts/build.sh	2021-11-01 13:35:59.976249297 -0700
@@ -1,17 +1,31 @@
 #!/usr/bin/env bash
-set -exuo pipefail
+set -e
 sudo chown 'makedeb:makedeb' ./ -R
 
-# Get variables
-pkgver="$(cat 'src/PKGBUILD' | grep '^pkgver=' | awk -F '=' '{print $2}')"
+# Build makedeb.
+export TARGET=local
+export RELEASE="${release_type}"
 
-# Copy PKGBUILD
-rm 'src/PKGBUILD'
-cp "PKGBUILDs/LOCAL/${release_type^^}.PKGBUILD" "src/PKGBUILD"
-
-# Configure PKGBUILD
-sed -i "s|pkgver={pkgver}|pkgver=${pkgver}|" 'src/PKGBUILD'
-
-# Build makedeb
-cd src
-./makedeb.sh --sync-deps --no-confirm
+read PKGVER PKGREL < <(echo "${DRONE_COMMIT_MESSAGE}" | grep '^Package Version:' | awk -F ': ' '{print $2}' | sed 's|-| |g')
+
+for i in PKGVER PKGREL; do
+	if [[ "${!i}" == "" ]]; then
+		echo "ERROR: ${i} isn't set."
+		echo "Please make sure your commit message contained a 'Package Version' line."
+		bad_commit_message="x"
+	fi
+done
+
+if [[ "${bad_commit_meesage:+x}" == "x" ]]; then
+	echo "COMMIT MESSAGE:"
+	echo "==============="
+	echo "${DRONE_COMMIT_MESSAGE}"
+	exit 1
+fi
+
+export PKGVER PKGREL
+
+cd PKGBUILD/
+./pkgbuild.sh > PKGBUILD
+
+makedeb -s --no-confirm
diff --color -Nru makedeb-7.1.2-bugfix1-stable/.drone/scripts/create_tag.sh makedeb/.drone/scripts/create_tag.sh
--- makedeb-7.1.2-bugfix1-stable/.drone/scripts/create_tag.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/.drone/scripts/create_tag.sh	2021-11-01 13:35:59.976249297 -0700
@@ -1,5 +1,5 @@
 #!/usr/bin/env bash
-set -exuo pipefail
+set -e
 sudo chown 'makedeb:makedeb' ./ -R
 
 # Set up SSH
@@ -17,8 +17,23 @@
 chmod 500 "/${HOME}/.ssh/"* -R
 
 # Get current package version
-package_version="$(cat "src/PKGBUILD" | grep '^pkgver=' | awk -F '=' '{print $2}')"
+read PKGVER PKGREL < <(echo "${DRONE_COMMIT_MESSAGE}" | grep '^Package Version:' | awk -F ': ' '{print $2}' | sed 's|-| |g')
+
+for i in PKGVER PKGREL; do
+	if [[ "${!i}" == "" ]]; then
+		echo "ERROR: ${i} isn't set."
+		echo "Please make sure your commit message contained a 'Package Version' line."
+		bad_commit_message="x"
+	fi
+done
+
+if [[ "${bad_commit_meesage:+x}" == "x" ]]; then
+	echo "COMMIT MESSAGE:"
+	echo "==============="
+	echo "${DRONE_COMMIT_MESSAGE}"
+	exit 1
+fi
 
 # Create and push release
-git tag "v${package_version}-${release_type}" -am ""
-git push "ssh://git@${github_url}/makedeb/makedeb" "v${package_version}-${release_type}"
+git tag "v${PKGVER}-${release_type}" -am ""
+git push "ssh://git@${github_url}/makedeb/makedeb" "v${PKGVER}-${release_type}"
diff --color -Nru makedeb-7.1.2-bugfix1-stable/.drone/scripts/publish.py makedeb/.drone/scripts/publish.py
--- makedeb-7.1.2-bugfix1-stable/.drone/scripts/publish.py	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/.drone/scripts/publish.py	2021-11-01 13:35:59.976249297 -0700
@@ -0,0 +1,40 @@
+#!/usr/bin/env python3
+import re
+import requests
+
+from os import environ as env
+from requests.auth import HTTPBasicAuth
+
+commit_message = env["DRONE_COMMIT_MESSAGE"]
+commit_branch = env["DRONE_COMMIT_BRANCH"]
+proget_server = env["proget_server"]
+proget_api_key = env["proget_api_key"]
+
+for i in commit_message.splitlines():
+    current_string = re.search("Package Version: ")
+
+    if current_version != None:
+        package_version = current_string.replace("Package Version: ", "").split("-")
+        pkgver = package_version[0]
+        pkgrel = package_version[1]
+        break
+
+if commit_branch == "stable":
+    package_name = "makedeb"
+else:
+    package_name = f"makedeb-{commit_branch}"
+
+filename = f"{package_name}_{pkgver}-{pkgrel}_all.deb"
+
+with open(f"./PKGBUILD/{filename}") as file:
+    data = file.read()
+
+print("INFO: Uploading package...")
+response = post(f"https://{proget_server}/debian/packages/upload/makedeb/main/{filename}", data=data, auth=HTTPBasicAuth("api", proget_api_key))
+
+if response.status_code != 200:
+    print(f"ERROR: There was an error uploading the package {response.reason}.")
+    exit(1)
+
+print("INFO: Succesfully uploaded package.")
+exit(0)
diff --color -Nru makedeb-7.1.2-bugfix1-stable/.drone/scripts/publish.sh makedeb/.drone/scripts/publish.sh
--- makedeb-7.1.2-bugfix1-stable/.drone/scripts/publish.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/.drone/scripts/publish.sh	1969-12-31 16:00:00.000000000 -0800
@@ -1,38 +0,0 @@
-#!/usr/bin/env bash
-set -e
-
-cd src
-pkgbuild_data="$(cat PKGBUILD)"
-
-component_name="$(echo "${pkgbuild_data}" | grep 'pkgname=' | sed 's|pkgname=||')"
-component_pkgver="$(echo "${pkgbuild_data}" | grep 'pkgver=' | sed 's|pkgver=||')"
-component_pkgrel="$(echo "${pkgbuild_data}" | grep 'pkgrel=' | sed 's|pkgrel=||')"
-
-# Check for build debs
-deb_packages=$(find *.deb 2> /dev/null)
-deb_packages_count=$(echo "${deb_packages}" | wc -w)
-
-if [[ "${deb_packages_count}" == "0" ]]; then
-    echo "ERROR: There doesn't appear to be any packages present."
-    exit 1
-
-elif [[ "${deb_packages_count}" -gt "1" ]]; then
-    echo "ERROR: More than one package is present."
-    exit 1
-fi
-
-# Upload packages.
-echo "Uploading ${deb_packages} to ${proget_server}..."
-
-curl_output="$(curl "https://${proget_server}/debian-packages/upload/makedeb/main/${deb_packages}" \
-            --user "api:${proget_api_key}" \
-            --upload-file "${deb_packages}")"
-
-# Verify that package was uploaded successfully.
-expected_curl_output="Package is now available at </_feeds/makedeb/main/${component_name}:all/${component_pkgver}-${component_pkgrel}>."
-
-if [[ "${curl_output}" != "${expected_curl_output}" ]]; then
-  echo "${curl_output}"
-  echo "Aborting due to unexpected output from curl."
-  exit 1
-fi
diff --color -Nru makedeb-7.1.2-bugfix1-stable/.drone/scripts/user-repo.sh makedeb/.drone/scripts/user-repo.sh
--- makedeb-7.1.2-bugfix1-stable/.drone/scripts/user-repo.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/.drone/scripts/user-repo.sh	2021-11-01 13:35:59.976249297 -0700
@@ -1,8 +1,26 @@
 #!/usr/bin/env bash
-set -exuo pipefail
+set -e
 sudo chown 'makedeb:makedeb' ./ -R
 
-# Set up SSH
+# Get package version.
+read PKGVER PKGREL < <(echo "${DRONE_COMMIT_MESSAGE}" | grep '^Package Version:' | awk -F ': ' '{print $2}' | sed 's|-| |g')
+
+for i in PKGVER PKGREL; do
+	if [[ "${!i}" == "" ]]; then
+		echo "ERROR: ${i} isn't set."
+		echo "Please make sure your commit message contained a 'Package Version' line."
+		bad_commit_message="x"
+	fi
+done
+
+if [[ "${bad_commit_meesage:+x}" == "x" ]]; then
+	echo "COMMIT MESSAGE:"
+	echo "==============="
+	echo "${DRONE_COMMIT_MESSAGE}"
+	exit 1
+fi
+
+# Set up SSH.
 rm -rf "/${HOME}/.ssh"
 mkdir -p "/${HOME}/.ssh"
 
@@ -23,28 +41,25 @@
 
 chmod 500 "/${HOME}/.ssh/"* -R
 
-# Clone AUR/MPR Package
+# Clone AUR/MPR Package.
 if [[ "${target_repo}" == "mpr" ]]; then
 	git clone "ssh://mpr@${mpr_url}/${package_name}.git" "${package_name}_${target_repo}"
-
 else
 	git clone "ssh://aur@${aur_url}/${package_name}.git" "${package_name}_${target_repo}"
-
 fi
 
-# Copy PKGBUILD to user repo
-rm "${package_name}_${target_repo}/PKGBUILD"
-cp "PKGBUILDs/${target_repo^^}/${release_type^^}.PKGBUILD" "${package_name}_${target_repo}/PKGBUILD"
-
-# Get current pkgver and pkgrel
-pkgver="$(cat src/PKGBUILD | grep '^pkgver=' | awk -F '=' '{print $2}')"
-pkgrel="$(cat src/PKGBUILD | grep '^pkgrel=' | awk -F '=' '{print $2}')"
+# Copy PKGBUILD to user repo.
+export TARGET="${target_repo}"
+export RELEASE="${release_type}"
+export PKGVER
+export PKGREL
 
-# Set package version in PKGBUILD
-sed -i "s|^pkgver={pkgver}|pkgver=${pkgver}|" "${package_name}_${target_repo}/PKGBUILD"
+rm "${package_name}_${target_repo}/PKGBUILD"
+cd PKGBUILD/
+./pkgbuild.sh > "../${package_name}_${target_repo}/PKGBUILD"
 
 # Create .SRCINFO file
-cd "${package_name}_${target_repo}"
+cd "../${package_name}_${target_repo}"
 
 makedeb --printsrcinfo | tee .SRCINFO
 
@@ -60,6 +75,6 @@
 
 # Commit changes and push
 git add PKGBUILD .SRCINFO
-git commit -m "Updated version to ${pkgver}-${pkgrel}"
+git commit -m "Updated version to ${PKGVER}-${PKGREL}"
 
 git push
diff --color -Nru makedeb-7.1.2-bugfix1-stable/.gitignore makedeb/.gitignore
--- makedeb-7.1.2-bugfix1-stable/.gitignore	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/.gitignore	2021-11-01 13:35:59.976249297 -0700
@@ -0,0 +1,5 @@
+debian/files
+debian/.debhelper/
+debian/debhelper-build-stamp
+debian/makedeb
+debian/makedeb.substvars
diff --color -Nru makedeb-7.1.2-bugfix1-stable/Makefile makedeb/Makefile
--- makedeb-7.1.2-bugfix1-stable/Makefile	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/Makefile	2021-11-01 13:35:59.976249297 -0700
@@ -0,0 +1,39 @@
+MAKEDEB_MAN_EPOCH = "$(shell git log -1 --pretty='%ct' man/makedeb.8.adoc)"
+PKGBUILD_MAN_EPOCH = "$(shell git log -1 --pretty='%ct' man/pkgbuild.5.adoc)"
+LATEST_STABLE_VERSION = "$(shell git tag | grep 'stable$$' | sort -Vr | head -n 1 | sed -e 's|-stable$$||' -e 's|^v||' )"
+.ONESHELL:
+
+all:
+	true
+
+prepare:
+	sed -i 's|$$$${pkgver}|$(PKGVER)|' src/makedeb.sh
+	sed -i 's|$$$${release}|$(RELEASE)|' src/makedeb.sh
+	sed -i 's|$$$${target}|$(TARGET)|' src/makedeb.sh
+	find src/makedeb.sh src/functions/ -type f -exec sed -i 's|^.*# REMOVE AT PACKAGING$$||' '{}' \;
+	
+	sed -i 's|$$$${pkgver}|$(PKGVER)|' man/makedeb.8.adoc
+	sed -i 's|$$$${pkgver}|$(PKGVER)|' man/pkgbuild.5.adoc
+
+package:
+	mkdir -p "$(DESTDIR)/usr/bin"
+	echo '#!/usr/bin/env bash' > "$(DESTDIR)/usr/bin/makedeb"
+	find src/functions/ -type f -exec cat '{}' \; >> "$(DESTDIR)/usr/bin/makedeb"
+	cat "src/makedeb.sh" >> "$(DESTDIR)/usr/bin/makedeb"
+	chmod 755 "$(DESTDIR)/usr/bin/makedeb"
+	
+	cd ./src/utils
+	find ./ -type f -exec install -Dm 755 '{}' "$(DESTDIR)/usr/share/makedeb/utils/{}" \;
+	cd ../../
+	
+	export SOURCE_DATE_EPOCH="$(MAKEDEB_MAN_EPOCH)"
+	asciidoctor -b manpage man/makedeb.8.adoc -o "$(DESTDIR)/usr/share/man/man8/makedeb.8"
+	
+	export SOURCE_DATE_EPOCH="$(PKGBUILD_MAN_EPOCH)"
+	asciidoctor -b manpage man/pkgbuild.5.adoc -o "$(DESTDIR)/usr/share/man/man5/pkgbuild.5"
+
+# This is for use by dpkg-buildpackage. Please use prepare and package instead.
+install:
+	$(MAKE) prepare PKGVER="$(LATEST_STABLE_VERSION)" RELEASE=stable TARGET=local
+	$(MAKE) package DESTDIR="$(DESTDIR)"
+
diff --color -Nru makedeb-7.1.2-bugfix1-stable/man/makedeb.8.adoc makedeb/man/makedeb.8.adoc
--- makedeb-7.1.2-bugfix1-stable/man/makedeb.8.adoc	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/man/makedeb.8.adoc	2021-11-01 13:35:59.976249297 -0700
@@ -2,6 +2,7 @@
 :doctype: manpage
 :hardbreaks:
 :manmanual: makedeb manual pages
+:mansource: MAKEDEB $${pkgver}
 
 == NAME
 makedeb - the modern packaging tool for Debian archives
diff --color -Nru makedeb-7.1.2-bugfix1-stable/man/pkgbuild.5.adoc makedeb/man/pkgbuild.5.adoc
--- makedeb-7.1.2-bugfix1-stable/man/pkgbuild.5.adoc	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/man/pkgbuild.5.adoc	2021-11-01 13:35:59.976249297 -0700
@@ -2,6 +2,7 @@
 :doctype: manpage
 :hardbreaks:
 :manmanual: makedeb manual pages
+:mansource: MAKEDEB $${pkgver}
 
 == NAME
 PKGBUILD - file format used by makedeb(8)
@@ -147,10 +148,10 @@
 *postinst (optional, function, array)*::
   A string that specifies the path to a script to execute after a package is unpacked onto a user's system.
 
-*postinst (optional, function, array)*::
+*prerm (optional, function, array)*::
   A string that specifies the path to a script to execute before a package is removed from a user's system.
 
-*postinst (optional, function, array)*::
+*postrm (optional, function, array)*::
   A string that specifies the path to a script to execute after a package is removed from a user's system.
 
 === OTHER
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILD/pkgbuild.sh makedeb/PKGBUILD/pkgbuild.sh
--- makedeb-7.1.2-bugfix1-stable/PKGBUILD/pkgbuild.sh	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/PKGBUILD/pkgbuild.sh	2021-11-01 13:35:59.976249297 -0700
@@ -0,0 +1,130 @@
+#!/usr/bin/env bash
+set -e
+
+# Bases.
+targets=('local' 'mpr' 'aur')
+releases=('stable' 'beta' 'alpha')
+
+base_stable_conflicts=('makedeb-beta' 'makedeb-alpha')
+base_beta_conflicts=('makedeb' 'makedeb-alpha')
+base_alpha_conflicts=('makedeb' 'makedeb-beta')
+
+base_debian_depends=('apt' 'bash' 'binutils' 'file' 'lsb-release' 'python3' 'python3-apt' 'tar')
+base_debian_makedepends=('asciidoctor' 'git')
+
+base_arch_depends=('tar' 'binutils' 'lsb-release' 'dpkg' 'asciidoctor')
+base_arch_makedepends=("${base_debian_makedepends[@]}")
+
+# Depends.
+local_stable_depends=("${base_debian_depends[@]}" 'makedeb-makepkg')
+local_beta_depends=("${base_debian_depends[@]}" 'makedeb-makepkg-beta')
+local_alpha_depends=("${base_debian_depends[@]}" 'makedeb-makepkg-alpha')
+
+mpr_stable_depends=("${local_stable_depends[@]}")
+mpr_beta_depends=("${local_beta_depends[@]}")
+mpr_alpha_depends=("${local_alpha_depends[@]}")
+
+aur_stable_depends=("${base_arch_depends[@]}" 'makedeb-makepkg')
+aur_beta_depends=("${base_arch_depends[@]}" 'makedeb-makepkg-beta')
+aur_alpha_depends=("${base_arch_depends[@]}" 'makedeb-makepkg-alpha')
+
+# Makedepends.
+local_stable_makedepends=("${base_debian_makedepends[@]}")
+local_beta_makedepends=("${base_debian_makedepends[@]}")
+local_alpha_makedepends=("${base_debian_makedepends[@]}")
+
+mpr_stable_makedepends=("${base_debian_makedepends[@]}")
+mpr_beta_makedepends=("${base_debian_makedepends[@]}")
+mpr_alpha_makedepends=("${base_debian_makedepends[@]}")
+
+aur_stable_makedepends=("${base_arch_makedepends[@]}")
+aur_beta_makedepends=("${base_arch_makedepends[@]}")
+aur_alpha_makedepends=("${base_arch_makedepends[@]}")
+
+# Conflicts
+local_stable_conflicts=("${base_stable_conflicts[@]}")
+local_beta_conflicts=("${base_beta_conflicts[@]}")
+local_alpha_conflicts=("${base_alpha_conflicts[@]}")
+
+mpr_stable_conflicts=("${base_stable_conflicts[@]}")
+mpr_beta_conflicts=("${base_beta_conflicts[@]}")     
+mpr_alpha_conflicts=("${base_alpha_conflicts[@]}")
+
+aur_stable_conflicts=("${base_stable_conflicts[@]}")
+aur_beta_conflicts=("${base_beta_conflicts[@]}")     
+aur_alpha_conflicts=("${base_alpha_conflicts[@]}")
+
+##################
+## BEGIN SCRIPT ##
+##################
+for i in 'TARGET' 'RELEASE' 'PKGVER' 'PKGREL'; do
+	if [[ "${!i+x}" != "x" ]]; then
+		echo "${i} isn't set."
+		missing_var="x"
+	fi
+done
+
+if [[ "${missing_var+x}" == "x" ]]; then
+	exit 1
+fi
+
+for i in "${targets[@]}"; do
+	if [[ "${TARGET}" == "$i" ]]; then
+		good_target="x"
+	fi
+done
+
+for i in "${releases[@]}"; do
+	if [[ "${RELEASE}" == "$i" ]]; then
+		good_release="x"
+	fi
+done
+
+for i in 'TARGET' 'RELEASE'; do
+	var="good_${i,,}"
+
+	if [[ "${!var+x}" != "x" ]]; then
+		echo "${i} isn't set to a valid value."
+		bad_var="x"
+	fi
+done
+
+if [[ "${bad_var+x}" == "x" ]]; then
+	exit 1
+fi
+
+# Generate the PKGBUILD file.
+if [[ "${RELEASE}" == "stable" ]]; then
+	pkgname="makedeb"
+else
+	pkgname="makedeb-${RELEASE}"
+fi
+
+depends="${TARGET}_${RELEASE}_depends[@]"
+makedepends="${TARGET}_${RELEASE}_makedepends[@]"
+conflicts="${TARGET}_${RELEASE}_conflicts[@]"
+
+depends=("${!depends}")
+makedepends=("${!makedepends}")
+conflicts=("${!conflicts}")
+
+depends="${depends[@]@Q}"
+makedepends="${makedepends[@]@Q}"
+conflicts="${conflicts[@]@Q}"
+
+if [[ "${TARGET}" == "local" ]]; then
+	extra_sed_args=('-e' "s|git+\${url}|git+file://$(git rev-parse --show-toplevel)|")
+fi
+
+template="$(cat TEMPLATE.PKGBUILD)"
+
+echo "${template}" | sed -e "s|\$\${pkgname}|${pkgname}|" \
+			 -e "s|\$\${pkgver}|${PKGVER}|" \
+			 -e "s|\$\${pkgrel}|${PKGREL}|" \
+			 -e "s|\$\${release}|${RELEASE}|" \
+			 -e "s|\$\${target}|${TARGET}|" \
+			 -e "s|\$\${depends}|${depends}|" \
+			 -e "s|\$\${makedepends}|${makedepends}|" \
+			 -e "s|\$\${conflicts}|${conflicts}|" \
+			 -e "s|\$\${url}|${url}|" \
+			 "${extra_sed_args[@]}"
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILD/README.md makedeb/PKGBUILD/README.md
--- makedeb-7.1.2-bugfix1-stable/PKGBUILD/README.md	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/PKGBUILD/README.md	2021-11-01 13:35:59.976249297 -0700
@@ -0,0 +1,20 @@
+# Usage
+The `pkgbuild.sh` script generates PKGBUILDs for all releases for Debian, the MPR, and the AUR.
+
+To use, set the following variables to any of the specified values:
+
+- `TARGET`: `local`, `mpr`, or `aur`
+- `RELEASE`: `stable`, `beta`, or `alpha`
+- `PKGVER`: Any valid `pkgver` string
+- `PKGREL`: Any valid `pkgrel` string
+
+For example:
+
+```sh
+export TARGET=mpr
+export RELEASE=stable
+export PKGVER=2.3.0
+export PKGREL=1
+```
+
+Then run `./pkgbuild.sh`, which will output a generated PKGBUILD file.
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILD/TEMPLATE.PKGBUILD makedeb/PKGBUILD/TEMPLATE.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILD/TEMPLATE.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/PKGBUILD/TEMPLATE.PKGBUILD	2021-11-01 13:35:59.976249297 -0700
@@ -0,0 +1,27 @@
+# Maintainer: Hunter Wittenborn <hunter@hunterwittenborn.com>
+_release=$${release}
+_target=$${target}
+
+pkgname=$${pkgname}
+pkgver=$${pkgver}
+pkgrel=$${pkgrel}
+pkgdesc="The modern packaging tool for Debian archives (${_release} release)"
+arch=('any')
+license=('GPL3')
+depends=($${depends})
+makedepends=($${makedepends})
+conflicts=($${conflicts})
+url="https://github.com/makedeb/makedeb"
+
+source=("makedeb::git+${url}/#tag=v${pkgver}-${_release}")
+sha256sums=('SKIP')
+
+prepare() {
+	cd makedeb/
+	make prepare PKGVER="${pkgver}" RELEASE="${_release}" TARGET="${_target}"
+}
+
+package() {
+	cd makedeb/
+	make package DESTDIR="${pkgdir}"
+}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/AUR/ALPHA.PKGBUILD makedeb/PKGBUILDs/AUR/ALPHA.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/AUR/ALPHA.PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/AUR/ALPHA.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,56 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=alpha
-
-pkgname=makedeb-alpha
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('tar' 'binutils' 'lsb-release' 'dpkg' 'asciidoctor' 'makedeb-makepkg-alpha')
-makedepends=('git')
-conflicts=('makedeb' 'makedeb-beta')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version, release type, and target OS
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-  sed -i 's|target_os="debian"|target_os="arch"|' src/makedeb.sh
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/AUR/BETA.PKGBUILD makedeb/PKGBUILDs/AUR/BETA.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/AUR/BETA.PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/AUR/BETA.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,56 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=beta
-
-pkgname=makedeb-beta
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('tar' 'binutils' 'lsb-release' 'dpkg' 'asciidoctor' 'makedeb-makepkg-beta')
-makedepends=('git')
-conflicts=('makedeb' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version, release type, and target OS
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-  sed -i 's|target_os="debian"|target_os="arch"|' src/makedeb.sh
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/AUR/STABLE.PKGBUILD makedeb/PKGBUILDs/AUR/STABLE.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/AUR/STABLE.PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/AUR/STABLE.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,56 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=stable
-
-pkgname=makedeb
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('tar' 'binutils' 'lsb-release' 'dpkg' 'asciidoctor' 'makedeb-makepkg')
-makedepends=('git')
-conflicts=('makedeb-beta' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version, release type, and target OS
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-  sed -i 's|target_os="debian"|target_os="arch"|' src/makedeb.sh
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/LOCAL/ALPHA.PKGBUILD makedeb/PKGBUILDs/LOCAL/ALPHA.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/LOCAL/ALPHA.PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/LOCAL/ALPHA.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,58 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=alpha
-
-# Used to obtain folder names for local repository
-_gitdir=$(git rev-parse --show-toplevel)
-_foldername=$(basename "${_gitdir}")
-
-pkgname=makedeb-alpha
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (alpha release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'asciidoctor' 'makedeb-makepkg-alpha')
-optdepends=('r!apt')
-conflicts=('makedeb' 'makedeb-beta')
-provides=('makedeb')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+file://${_gitdir}")
-sha256sums=('SKIP')
-
-prepare() {
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|" "${_foldername}/src/makedeb.sh"
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" "${_foldername}/src/makedeb.sh"
-
-  # Remove prebuild commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' "${_foldername}/src/makedeb.sh"
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd "${srcdir}/${_foldername}"
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/LOCAL/BETA.PKGBUILD makedeb/PKGBUILDs/LOCAL/BETA.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/LOCAL/BETA.PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/LOCAL/BETA.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,58 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=beta
-
-# Used to obtain folder names for local repository
-_gitdir=$(git rev-parse --show-toplevel)
-_foldername=$(basename "${_gitdir}")
-
-pkgname=makedeb-beta
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (beta release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'asciidoctor' 'makedeb-makepkg-beta')
-optdepends=('r!apt')
-conflicts=('makedeb' 'makedeb-alpha')
-provides=('makedeb')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+file://${_gitdir}")
-sha256sums=('SKIP')
-
-prepare() {
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|" "${_foldername}/src/makedeb.sh"
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" "${_foldername}/src/makedeb.sh"
-
-  # Remove prebuild commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' "${_foldername}/src/makedeb.sh"
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd "${srcdir}/${_foldername}"
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/LOCAL/STABLE.PKGBUILD makedeb/PKGBUILDs/LOCAL/STABLE.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/LOCAL/STABLE.PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/LOCAL/STABLE.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,57 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=stable
-
-# Used to obtain folder names for local repository
-_gitdir=$(git rev-parse --show-toplevel)
-_foldername=$(basename "${_gitdir}")
-
-pkgname=makedeb
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (stable release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'asciidoctor' 'makedeb-makepkg')
-optdepends=('r!apt')
-conflicts=('makedeb-beta' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+file://${_gitdir}")
-sha256sums=('SKIP')
-
-prepare() {
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|" "${_foldername}/src/makedeb.sh"
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" "${_foldername}/src/makedeb.sh"
-
-  # Remove prebuild commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' "${_foldername}/src/makedeb.sh"
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd "${srcdir}/${_foldername}"
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/MPR/ALPHA.PKGBUILD makedeb/PKGBUILDs/MPR/ALPHA.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/MPR/ALPHA.PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/MPR/ALPHA.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,56 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=alpha
-
-pkgname=makedeb-alpha
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'asciidoctor' 'makedeb-makepkg-alpha')
-makedepends=('git')
-optdepends=('apt' 'git')
-conflicts=('makedeb' 'makedeb-beta')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/MPR/BETA.PKGBUILD makedeb/PKGBUILDs/MPR/BETA.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/MPR/BETA.PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/MPR/BETA.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,56 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=beta
-
-pkgname=makedeb-beta
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'asciidoctor' 'makedeb-makepkg-beta')
-makedepends=('git')
-optdepends=('apt' 'git')
-conflicts=('makedeb' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/MPR/STABLE.PKGBUILD makedeb/PKGBUILDs/MPR/STABLE.PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/MPR/STABLE.PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/MPR/STABLE.PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,56 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=stable
-
-pkgname=makedeb
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'asciidoctor' 'makedeb-makepkg')
-makedepends=('git')
-optdepends=('apt' 'git')
-conflicts=('makedeb-beta' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/PKGBUILDs/README.md makedeb/PKGBUILDs/README.md
--- makedeb-7.1.2-bugfix1-stable/PKGBUILDs/README.md	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/PKGBUILDs/README.md	1969-12-31 16:00:00.000000000 -0800
@@ -1,3 +0,0 @@
-Some of the variables inside these PKGBUILDs (variables without `$` characters) are taken from `src/PKGBUILD` during CI deployments.
-
-To find the relevant variables, find the corresponding value in `src/PKGBUILD`, which will be located under the same variable name.
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/arg_check.sh makedeb/src/functions/arg_check.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/arg_check.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/arg_check.sh	2021-11-01 13:35:59.980249317 -0700
@@ -7,6 +7,7 @@
   declare -Ag makedeb_args=()
   declare -ag apt_args=()
   declare -ag makepkg_args=()
+  declare -ag pacman_args=()
 
   # Actual argument check
   if [[ "${target_os}" == "debian" ]]; then
@@ -41,18 +42,18 @@
     while [[ "${1}" != "" ]]; do
       case "${1}" in
         -A | --ignore-arch | --ignorearch) declare -g makepkg_args+=("--ignorearch") ;;
-        -d | --no-deps | --nodeps)         declare -g skip_dependency_checks="true"; declare makepkg_args+=("--nodeps") ;;
+        -d | --no-deps | --nodeps)         declare -g skip_dependency_checks="true";;
         -F | -p | --file)                  declare -g FILE="${2}"; shift ;;
         -g | --gen-integ | --geninteg)     declare -g makepkg_geninteg="true" ;;
         -h | --help)                       help; exit 0 ;;
         -H | --field)                      export  extra_control_fields+=("${2}"); shift ;;
         -Q | --no-fields)                  warning "'${1}' has been deprecated, and should not be used." ;;
-        -r | --rm-deps | --rmdeps)         declare -g remove_dependencies="true"; declare makepkg_args+=("--rmdeps") ;;
-        -s | --sync-deps | --syncdeps)     declare -g install_dependencies="true"; declare makepkg_args+=("--syncdeps") ;;
+        -r | --rm-deps | --rmdeps)         declare -g remove_dependencies="true" ;;
+        -s | --sync-deps | --syncdeps)     declare -g install_dependencies="true" ;;
         -v | --distro-packages)            warning "'${1}' has been deprecated, and should not be used." ;;
         -V | --version)                    version_info; exit 0 ;;
         --dur-check)                       declare -g dur_check="true" ;;
-        --no-confirm)                      declare -g apt_args+=("--yes"); declare -g makepkg_args+=("--noconfirm") ;;
+        --no-confirm)                      declare -g pacman_args+=("--noconfirm") ;;
         --print-control)                   declare -g print_control=1 ;;
         --print-srcinfo | --printsrcinfo)  declare -g makepkg_printsrcinfo="true" ;;
         --skip-pgp-check | --skippgpcheck) declare -g makepkg_args+=("--skippgpcheck") ;;
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/control_file/generate_optdepends_fields.sh makedeb/src/functions/control_file/generate_optdepends_fields.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/control_file/generate_optdepends_fields.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/control_file/generate_optdepends_fields.sh	1969-12-31 16:00:00.000000000 -0800
@@ -1,25 +0,0 @@
-generate_optdepends_fields() {
-  local recommends=()
-  local suggests=()
-
-  for i in "${optdepends[@]}"; do
-    string_value="${i/:*/}"
-
-    declare string_prefix="$(echo "${string_value}" | grep -Eo 'r!|s!')"
-
-    if [[ "${string_prefix}" == "" ]]; then
-      suggests+=("${i}")
-    else
-      program_name="$(echo "${string_value}" | sed "s|^${string_prefix}||")"
-
-      if [[ "${string_prefix}" == "r!" ]]; then
-        recommends+=("${program_name}")
-      elif [[ "${string_prefix}" == "s!" ]]; then
-        suggests+="${program_name}"
-      fi
-    fi
-  done
-
-  declare -g recommends=("${recommends[@]}")
-  declare -g suggests=("${suggests[@]}")
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/control_file/generate_prefix_fields.sh makedeb/src/functions/control_file/generate_prefix_fields.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/control_file/generate_prefix_fields.sh	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/src/functions/control_file/generate_prefix_fields.sh	2021-11-01 13:35:59.980249317 -0700
@@ -0,0 +1,46 @@
+generate_prefix_fields() {
+  # depends.
+  local depends_keys=("${depends[@]}")
+  local depends=()
+  local predepends=()
+  local string_prefix=""
+  local program_name=""
+  local string_value=""
+  
+  for i in "${depends_keys[@]}"; do
+    string_prefix="$(echo "${i}" | grep -o '^p!')" || true
+    
+    if [[ "${string_prefix}" == "p!" ]]; then
+      program_name="$(echo "${i}" | sed 's|^p!||')"
+      predepends+=("${program_name}")
+    else
+      depends+=("${i}")
+    fi
+  done
+      
+  # optdepends.
+  local recommends=()
+  local suggests=()
+
+  for i in "${optdepends[@]}"; do
+    string_value="${i/:*/}"
+    declare string_prefix="$(echo "${string_value}" | grep -Eo '^r!|^s!')"
+
+    if [[ "${string_prefix}" == "" ]]; then
+      suggests+=("${i}")
+    else
+      program_name="$(echo "${string_value}" | sed "s|^${string_prefix}||")"
+      if [[ "${string_prefix}" == "r!" ]]; then
+        recommends+=("${program_name}")
+      elif [[ "${string_prefix}" == "s!" ]]; then
+        suggests+=("${program_name}")
+      fi
+    fi
+  done
+
+  # Globally set all variables.
+  declare -g depends=("${depends[@]}")
+  declare -g predepends=("${predepends[@]}")
+  declare -g recommends=("${recommends[@]}")
+  declare -g suggests=("${suggests[@]}")
+}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/convert/add_dependency_commas.sh makedeb/src/functions/convert/add_dependency_commas.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/convert/add_dependency_commas.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/convert/add_dependency_commas.sh	2021-11-01 13:35:59.980249317 -0700
@@ -1,5 +1,6 @@
 add_dependency_commas() {
   declare -g depends=("$(echo "${depends[@]}" | sed 's| |, |g')")
+  declare -g predepends=("$(echo "${predepends[@]}" | sed 's| |, |g')")
   declare -g recommends=("$(echo "${recommends[@]}" | sed 's| |, |g')")
   declare -g suggests=("$(echo "${suggests[@]}" | sed 's| |, |g')")
   declare -g conflicts=("$(echo "${conflicts[@]}" | sed 's| |, |g')")
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/convert/convert_relationships_parentheses.sh makedeb/src/functions/convert/convert_relationships_parentheses.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/convert/convert_relationships_parentheses.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/convert/convert_relationships_parentheses.sh	2021-11-01 13:35:59.980249317 -0700
@@ -1,5 +1,5 @@
 convert_relationships_parentheses() {
-  for i in depends recommends suggests conflicts makedepends checkdepends provides replaces; do
+  for i in depends predepends recommends suggests conflicts makedepends checkdepends provides replaces; do
     local new_values=()
     var="${i}[@]"
 
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/convert/run_dependency_conversion.sh makedeb/src/functions/convert/run_dependency_conversion.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/convert/run_dependency_conversion.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/convert/run_dependency_conversion.sh	2021-11-01 13:35:59.980249317 -0700
@@ -1,5 +1,6 @@
 run_dependency_conversion() {
   check_relationships depends      "${depends[@]}"
+  check_relationships predepends   "${predepends[@]}"
   check_relationships recommends   "${recommends[@]}"
   check_relationships suggests     "${suggests[@]}"
   check_relationships conflicts    "${conflicts[@]}"
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/check_dependencies.sh makedeb/src/functions/dependency_checks/check_dependencies.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/check_dependencies.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/dependency_checks/check_dependencies.sh	1969-12-31 16:00:00.000000000 -0800
@@ -1,48 +0,0 @@
-check_dependencies() {
-  declare -g needed_dependencies=() \
-             bad_apt_dependencies=()
-
-  # Generate temporary deb file so we can see what dependencies are missing.
-  mkdir -p "dependency_deb/${pkgbase}/DEBIAN/"
-
-  pkgname="${pkgbase}" \
-    hide_control_output=1 \
-    generate_control "./${FILE-PKGBUILD}" "dependency_deb/${pkgbase}/DEBIAN/control"
-
-  cd "dependency_deb/${pkgbase}/"
-  build_deb "${pkgbase}"
-
-  # Dry-run install the deb file so we can see what's missing.
-  apt_output="$(localized apt-get install --dry-run "./${pkgbase}_${pkgver}_${MAKEDEB_CARCH}.deb" 2>&1 || true)"
-
-  cd ../../
-
-  # Process APT's output
-  get_apt_output needed_dependencies_temp  "The following NEW packages will be installed"
-  get_apt_output bad_apt_dependencies      "The following packages have unmet dependencies"
-
-  # Abort if unmet dependencies were found
-  if [[ "${#bad_apt_dependencies}" != "0" ]]; then
-    declare -g bad_apt_dependencies=("$(echo "${bad_apt_dependencies[@]}" | \
-                                        sed 's|\\n|\n|g' | \
-                                        # APT seems to list the name of bad
-                                        # packages after the last colon, so we
-                                        # remove everything before it.
-                                        sed 's|.*: ||g' | \
-                                        # Next, find everything up to the last
-                                        # ')', or up to the first space when
-                                        # that doesn't work.
-                                        grep -Eo '^[^)]*)|^[^ ]*' | \
-                                        sed 's|[()]||g' | \
-                                        sed 's| ||g' | \
-                                        tr -t '\n' ' ' | \
-                                        sed 's| $||')")
-
-    bad_apt_dependencies_output="$(echo "${bad_apt_dependencies[@]}" | sed 's| |, |g')"
-
-    error "The following build dependencies were unable to be satisfied: ${bad_apt_dependencies_output}"
-    exit 1
-  fi
-
-  unset bad_apt_dependencies
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/check_distro_dependencies.sh makedeb/src/functions/dependency_checks/check_distro_dependencies.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/check_distro_dependencies.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/dependency_checks/check_distro_dependencies.sh	2021-11-01 13:35:59.980249317 -0700
@@ -16,7 +16,7 @@
     distro_variable_string="${distro_codename}_${i}[@]"
     distro_variable_data=("${!distro_variable_string}")
 
-    if [[ "${package_data}" != "" ]]; then
+    if [[ "${distro_variable_data}" != "" ]]; then
       create_array "${i}" "${distro_variable_data[@]}"
     fi
   done
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/check_missing_dependencies.sh makedeb/src/functions/dependency_checks/check_missing_dependencies.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/check_missing_dependencies.sh	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/src/functions/dependency_checks/check_missing_dependencies.sh	2021-11-01 13:35:59.980249317 -0700
@@ -0,0 +1,50 @@
+check_missing_dependencies() {
+  # Get list of missing dependencies.
+  if [[ "${target_os}" == "debian" ]]; then
+    if ! missing_dependencies="$("${makedeb_utils_dir}/missing_apt_dependencies.py" "${predepends[@]}" "${depends[@]}")"; then
+      error "There was an error checking build dependencies."
+      exit 1
+    elif ! missing_build_dependencies="$("${makedeb_utils_dir}/missing_apt_dependencies.py"  "${makedepends[@]}" "${checkdepends[@]}")"; then
+      error "There was an error checking build dependencies."
+      exit 1
+    fi
+        
+  elif [[ "${target_os}" == "arch" ]]; then
+    missing_dependencies="$(pacman -T -- "${predepends[@]}" "${depends[@]}")" || true
+    missing_build_dependencies="$(pacman -T -- "${makedepends[@]}" "${checkdepends[@]}")" || true
+  fi
+  
+  # Unset variables if no missing dependencies were found.
+  for i in 'missing_dependencies' 'missing_build_dependencies'; do
+    if [[ "${!i}" == "" ]]; then
+      unset "${i}"
+    fi
+  done
+    
+  # Map output of commands to arrays.
+  mapfile -t missing_dependencies < <(echo -n "${missing_dependencies}")
+  mapfile -t missing_build_dependencies < <(echo -n "${missing_build_dependencies}")
+
+  # Create dependency arrays without relationships attached (for when removing
+  # build dependencies).
+  declare missing_dependencies_no_relations=()
+  declare missing_build_dependencies_no_relations=()
+    
+  for i in 'missing_dependencies' 'missing_build_dependencies'; do
+    declare current_array=()
+    declare var_string="${i}[@]"
+            
+    for j in "${!var_string}"; do
+      declare current_program="$(echo "${j}" | sed -E 's/<.*|>.*|=.*//')"
+      declare current_array+=("${current_program}")
+    done
+      
+    create_array "${i}_no_relations" "${current_array[@]}"
+    unset current_array
+  done
+      
+  declare -g missing_dependencies
+  declare -g missing_dependencies_no_relations=("${missing_dependencies_no_relations[@]}")
+  declare -g missing_build_dependencies
+  declare -g missing_build_dependencies_no_relations=("${missing_build_dependencies_no_relations[@]}")
+}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/get_apt_output.sh makedeb/src/functions/dependency_checks/get_apt_output.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/get_apt_output.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/dependency_checks/get_apt_output.sh	1969-12-31 16:00:00.000000000 -0800
@@ -1,31 +0,0 @@
-get_apt_output() {
-  local starting_line="${2}" \
-        returned_variable="${1}" \
-        returned_packages="" \
-        returned_packages_temp="" \
-        check_packages=0
-
-  mapfile -t arrayed_apt_output < <(echo "${apt_output}")
-
-  for i in "${arrayed_apt_output[@]}"; do
-    # If 'check_packages' is triggered, start processing lines until a line
-    # without a space prefix is encountered.
-    if (( "${check_packages}" )); then
-      if echo "${i}" | grep -q '^ '; then
-        if [[ "${returned_variable}" == "bad_apt_dependencies" ]]; then
-          returned_packages+="${i}\n"
-        else
-          returned_packages+="${i} "
-        fi
-      else
-        break
-      fi
-    elif echo "${i}" | grep -q "${starting_line}"; then
-      check_packages=1
-    fi
-  done
-
-  returned_packages=($(echo "${returned_packages}" | tr -s ' ' | sed -e 's|^ ||' -e 's| $||'))
-
-  create_array "${returned_variable}" "${returned_packages[@]}"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/install_depends.sh makedeb/src/functions/dependency_checks/install_depends.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/install_depends.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/dependency_checks/install_depends.sh	1969-12-31 16:00:00.000000000 -0800
@@ -1,36 +0,0 @@
-install_depends() {
-  local failed_dependency_installation=0
-
-  if [[ "${#needed_dependencies_temp}" != "0" ]]; then
-    # Remove all packages in 'needed_dependencies' that match package names
-    # in 'pkgname'.
-    for i in "${needed_dependencies_temp[@]}"; do
-      for j in "${pkgname[@]}"; do
-        if [[ "${i}" != "${j}" ]]; then
-          needed_dependencies+=("${i}")
-        fi
-      done
-    done
-
-    # Set needed_dependencies to be global and readonly, as we'll use it later
-    # in remove_dependencies() if the '-r' option was passed.
-    declare -gr needed_dependencies
-
-    # Return if new dependency list is equal to 0, as we have nothing to
-    # install then.
-    if [[ "${#needed_dependencies}" == "0" ]]; then
-      return
-    fi
-
-    # Install build dependencies, and mark them as automatically installed.
-    msg2 "Installing build dependencies..."
-
-    sudo apt-get install "${apt_args[@]}" -- "${needed_dependencies[@]}" || failed_dependency_installation=1
-    sudo apt-mark auto -- "${needed_dependencies[@]}" 1> /dev/null || failed_dependency_installation=1
-
-    if (( "${failed_dependency_installation}" )); then
-      error "There was an error installing build dependencies."
-      exit 1
-    fi
-  fi
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/install_missing_dependencies.sh makedeb/src/functions/dependency_checks/install_missing_dependencies.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/install_missing_dependencies.sh	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/src/functions/dependency_checks/install_missing_dependencies.sh	2021-11-01 13:35:59.980249317 -0700
@@ -0,0 +1,30 @@
+install_missing_dependencies() {
+  if [[ "${#missing_dependencies}" == "0" && "${#missing_build_dependencies}" == "0" ]]; then
+    return 0
+  fi
+  
+  msg2 "Installing required build dependencies..."
+  
+  if [[ "${target_os}" == "debian" ]]; then
+    if ! sudo apt-get install "${apt_args[@]}" -- "${missing_dependencies[@]}" "${missing_build_dependencies[@]}"; then
+      error "There was an error installing build dependencies."
+      exit 1
+    fi
+    
+    if ! sudo apt-mark auto -- "${missing_dependencies_no_relations[@]}" "${missing_build_dependencies_no_relations[@]}" 1> /dev/null; then
+      error "There was an error marking installed build dependencies as automatically installed."
+      error "You may need to mark the following packages as automatically installed via 'apt-mark auto':"
+      
+      for i in "${missing_dependencies_no_relations[@]}" "${missing_build_dependencies_no_relations[@]}"; do
+        msg2 "${i}"
+      done
+      exit 1
+    fi
+    
+  elif [[ "${target_os}" == "arch" ]]; then
+    if ! sudo pacman -S --asdeps "${pacman_args[@]}" -- "${missing_dependencies[@]}" "${missing_build_dependencies[@]}"; then
+      error "There was an error installing build dependencies."
+      exit 1
+    fi
+  fi
+}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/remove_dependencies.sh makedeb/src/functions/dependency_checks/remove_dependencies.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/remove_dependencies.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/dependency_checks/remove_dependencies.sh	1969-12-31 16:00:00.000000000 -0800
@@ -1,32 +0,0 @@
-remove_dependencies() {
-  local build_dependencies=() \
-        build_dependency_list=()
-
-  # Generate list of dependencies from 'depends' and 'makedepends'
-  build_dependencies=("$(echo -n ${makedepends[@]} ${checkdepends[@]} | \
-                        sed 's| |\n|g' | \
-                        grep -o '^[^=<>]*' | \
-                        tr -t '\n' ' ' | \
-                        sed -e 's|^ ||' -e 's| $||')")
-
-  # Only uninstall dependencies that were previously installed.
-  # 'needed_dependencies' will contain dependencies from 'depends' as well,
-  # so we remove any of those packages here by adding packages from
-  # 'makedepends' and 'checkdepends' to a new list.
-  for i in "${needed_dependencies[@]}"; do
-    for j in "${build_dependencies[@]}"; do
-      if [[ "${i}" == "${j}" ]]; then
-        build_dependency_list+=("${i}")
-      fi
-    done
-  done
-
-  # Return if new dependency list is equal to 0, as we have nothing to
-  # remove then.
-  if [[ "${#build_dependency_list}" == "0" ]]; then
-    return
-  fi
-
-  msg "Removing build dependencies..."
-  sudo apt-get purge "${build_dependency_list[@]}" "${apt_args[@]}"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/remove_installed_dependencies.sh makedeb/src/functions/dependency_checks/remove_installed_dependencies.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/remove_installed_dependencies.sh	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/src/functions/dependency_checks/remove_installed_dependencies.sh	2021-11-01 13:35:59.980249317 -0700
@@ -0,0 +1,21 @@
+remove_installed_dependencies() {
+  if [[ "${#missing_build_dependencies_no_relations[@]}" == "0" ]]; then
+    return 0
+  fi
+  
+  msg "Removing installed build dependencies..."
+  
+  if [[ "${target_os}" == "debian" ]]; then
+    if ! sudo apt-get purge "${apt_args[@]}" -- "${missing_build_dependencies_no_relations[@]}"; then
+      error "There was an error removing build dependencies."
+      exit 1
+    fi
+  
+  elif [[ "${target_os}" == "arch" ]]; then
+    if ! sudo pacman -R "${pacman_args[@]}" -- "${missing_build_dependencies_no_relations[@]}"; then
+      error "There was an error removing build dependencies."
+      exit 1
+    fi
+  fi
+  msg "Done."
+}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/verify_dependencies.sh makedeb/src/functions/dependency_checks/verify_dependencies.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/verify_dependencies.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/dependency_checks/verify_dependencies.sh	1969-12-31 16:00:00.000000000 -0800
@@ -1,35 +0,0 @@
-verify_dependencies() {
-  if [[ "${#needed_dependencies_temp}" != "0" ]]; then
-
-    # Get bare list of dependency names from control file.
-    dependencies=($(cat "dependency_deb/${pkgbase}/DEBIAN/control" | \
-                    grep '^Depends: ' | \
-                    sed 's|Depends: ||' |
-                    sed 's|, |\n|g' | \
-                    # This grep command will fail if it can't find a match, so
-                    # we add '|| true' to the end to avoid a premature exit.
-                    grep -o '^[^( ]*')) || true
-
-    # Remove all packages in 'needed_dependencies' that aren't in the list of
-    # build dependencies.
-    for i in "${needed_dependencies_temp[@]}"; do
-      for j in "${dependencies[@]}"; do
-        if [[ "${i}" == "${j}" ]]; then
-          needed_dependencies+=("${i}")
-        fi
-      done
-    done
-
-    # 'needed_dependencies' is going to be empty if the only packages in it are
-    # packages from 'pkgname', so we return if so as to not print an error for
-    # no missing dependencies.
-    if [[ "${#needed_dependencies}" == "0" ]]; then
-      return
-    fi
-
-    needed_dependencies_output="$(echo "${needed_dependencies[@]}" | sed 's| |, |g')"
-
-    error "The following build dependencies are missing: ${needed_dependencies_output}"
-    exit 1
-  fi
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/verify_no_missing_dependencies.sh makedeb/src/functions/dependency_checks/verify_no_missing_dependencies.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/dependency_checks/verify_no_missing_dependencies.sh	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/src/functions/dependency_checks/verify_no_missing_dependencies.sh	2021-11-01 13:35:59.980249317 -0700
@@ -0,0 +1,11 @@
+verify_no_missing_dependencies() {
+  if [[ "${#missing_dependencies[@]}" != "0" || "${#missing_build_dependencies[@]}" != "0" ]]; then
+    error "The following build dependencies are missing:"
+    
+    for i in "${missing_dependencies_no_relations[@]}" "${missing_build_dependencies_no_relations[@]}"; do
+      msg2 "${i}"
+    done
+    
+    exit 1
+  fi
+}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/fakeroot_build.sh makedeb/src/functions/fakeroot_build.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/fakeroot_build.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/fakeroot_build.sh	2021-11-01 13:35:59.980249317 -0700
@@ -44,7 +44,7 @@
     # Convert dependencies, then export data to control file.
     check_distro_dependencies
     remove_dependency_description
-    generate_optdepends_fields
+    generate_prefix_fields
     run_dependency_conversion
 
     msg2 "Generating control file..."
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/generate_control.sh makedeb/src/functions/generate_control.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/generate_control.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/generate_control.sh	2021-11-01 13:35:59.980249317 -0700
@@ -15,6 +15,7 @@
   export_control "Maintainer:"    "${output_file}"  "${maintainer[@]}"
   export_control "Homepage:"      "${output_file}"  "${url[@]}"
 
+  export_control "Pre-Depends:"   "${output_file}"  "${predepends[@]}"
   export_control "Depends:"       "${output_file}"  "${depends[@]}"
   export_control "Recommends:"    "${output_file}"  "${recommends[@]}"
   export_control "Suggests:"      "${output_file}"  "${suggests[@]}"
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/functions/help.sh makedeb/src/functions/help.sh
--- makedeb-7.1.2-bugfix1-stable/src/functions/help.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/functions/help.sh	2021-11-01 13:35:59.980249317 -0700
@@ -1,55 +1,51 @@
 help() {
-  if [[ "${target_os}" == "debian" ]]; then
-    echo "makedeb (${makedeb_package_version}) - Create Debian archives from PKGBUILDs"
-    echo "Usage: makedeb [options]"
-    echo
-    echo "makedeb takes PKGBUILD files and builds archives installable with APT"
-    echo
-    echo "Options:"
-    echo "  -A, --ignore-arch    Ignore errors about mismatching architectures"
-    echo "  -d, --no-deps        Skip all dependency checks"
-    echo "  -F, --file, -p       Specify a build file other than 'PKGBUILD'"
-    echo "  -g, --gen-integ      Generate hashes for source files"
-    echo "  -h, --help           Show this help menu and exit"
-    echo "  -H, --field          Append the resulting control file with custom fields"
-    echo "  -i, --install        Automatically install package(s) after building"
-    echo "  -V, --version        Print version information and exit"
-    echo "  -r, --rm-deps        Remove installed dependencies after building"
-    echo "  -s, --sync-deps      Install missing dependencies"
-    echo "  --print-control      Print a generated control file and exit"
-    echo "  --print-srcinfo      Print a generated .SRCINFO file and exit"
-    echo "  --skip-pgp-check     Do not verify source files against PGP signatures"
-    echo "  --verbose            Print (very) detailed logging"
-    echo
-    echo "The following options can modify the behavior of APT:"
-    echo "  --as-deps             Mark built packages as automatically installed (when using '-i')"
-    echo "  --no-confirm          Don't ask before installing packages"
-    echo
-    echo "Report bugs at https://github.com/hwittenborn/makedeb"
+	echo "makedeb ${makedeb_package_version} (${makedeb_release_type}, ${makedeb_release_target})"
+	echo "Usage: makedeb [options]"
+	echo
+	echo "makedeb takes PKGBUILD files and creates archives installable via APT"
+	echo
+  
+	if [[ "${target_os}" == "debian" ]]; then
+		echo "Options:"
+		echo "  -A, --ignore-arch    Ignore errors about mismatching architectures"
+		echo "  -d, --no-deps        Skip all dependency checks"
+		echo "  -F, --file, -p       Specify a build file other than 'PKGBUILD'"
+		echo "  -g, --gen-integ      Generate hashes for source files"
+		echo "  -h, --help           Show this help menu and exit"
+		echo "  -H, --field          Append the resulting control file with custom fields"
+		echo "  -i, --install        Automatically install package(s) after building"
+		echo "  -V, --version        Print version information and exit"
+		echo "  -r, --rm-deps        Remove installed dependencies after building"
+		echo "  -s, --sync-deps      Install missing dependencies"
+		echo "  --print-control      Print a generated control file and exit"
+		echo "  --print-srcinfo      Print a generated .SRCINFO file and exit"
+		echo "  --skip-pgp-check     Do not verify source files against PGP signatures"
+		echo "  --verbose            Print (very) detailed logging"
+		echo
+		echo "The following options can modify the behavior of APT:"
+		echo "  --as-deps             Mark built packages as automatically installed (when using '-i')"
+		echo "  --no-confirm          Don't ask before installing packages"
 
-  elif [[ "${target_os}" == "arch" ]]; then
-    echo "makedeb (${makedeb_package_version}) - Create Debian archives from PKGBUILDs"
-    echo "Usage: makedeb [options]"
-    echo
-    echo "makedeb takes PKGBUILD files and builds archives installable with APT"
-    echo
-    echo "Options:"
-    echo "  -A, --ignore-arch    Ignore errors about mismatching architectures"
-    echo "  -d, --no-deps        Skip all dependency checks"
-    echo "  -F, --file, -p       Specify a build file other than 'PKGBUILD'"
-    echo "  -g, --gen-integ      Generate hashes for source files"
-    echo "  -h, --help           Show this help menu and exit"
-    echo "  -H, --field          Append the resulting control file with custom fields"
-    echo "  -r, --rm-deps        Remove installed dependencies after building"
-    echo "  -V, --version        Print version info and exit"
-    echo "  -s, --sync-deps      Install missing dependencies"
-    echo "  --print-control      Print a generated control file and exit"
-    echo "  --verbose            Print (very) detailed logging"
-    echo "  --print-src-info     Print a generated .SRCINFO file and exit"
-    echo "  --skip-pgp-check     Do not verify source files against PGP signatures"
-    echo
-    echo "  The following options can modify the behavior of pacman:"
-    echo "    --no-confirm       Don't ask before install dependencies"
-    echo "Report bugs at https://github.com/hwittenborn/makedeb"
-  fi
+	elif [[ "${target_os}" == "arch" ]]; then
+		echo "Options:"
+		echo "  -A, --ignore-arch    Ignore errors about mismatching architectures"
+		echo "  -d, --no-deps        Skip all dependency checks"
+		echo "  -F, --file, -p       Specify a build file other than 'PKGBUILD'"
+		echo "  -g, --gen-integ      Generate hashes for source files"
+		echo "  -h, --help           Show this help menu and exit"
+		echo "  -H, --field          Append the resulting control file with custom fields"
+		echo "  -r, --rm-deps        Remove installed dependencies after building"
+		echo "  -V, --version        Print version info and exit"
+		echo "  -s, --sync-deps      Install missing dependencies"
+		echo "  --print-control      Print a generated control file and exit"
+		echo "  --verbose            Print (very) detailed logging"
+		echo "  --print-src-info     Print a generated .SRCINFO file and exit"
+		echo "  --skip-pgp-check     Do not verify source files against PGP signatures"
+		echo
+		echo "  The following options can modify the behavior of pacman:"
+		echo "    --no-confirm       Don't ask before install dependencies"
+	fi
+
+	echo
+	echo "See makedeb(8) for information on available options and links for obtaining support."
 }
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/makedeb.sh makedeb/src/makedeb.sh
--- makedeb-7.1.2-bugfix1-stable/src/makedeb.sh	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/makedeb.sh	2021-11-01 13:35:59.980249317 -0700
@@ -27,10 +27,19 @@
 declare package_convert="false"
 declare hide_control_output=0
 
-declare makedeb_package_version="git"
-declare makedeb_release_type="git"
-declare target_os="debian"
+declare makedeb_package_version="$${pkgver}"
+declare makedeb_release_type="$${release}"
+declare makedeb_release_target="$${target}"
+
+if [[ "${makedeb_release_target}" == "local" || "${makedeb_release_target}" == "mpr" ]]; then
+	declare target_os="debian"
+elif [[ "${makedeb_release_target}" == "arch" ]]; then
+	declare target_os="arch"
+fi
+
 declare makepkg_package_name="makedeb-makepkg"
+declare MAKEDEB_UTILS_DIR="./utils/" # REMOVE AT PACKAGING
+declare makedeb_utils_dir="${MAKEDEB_UTILS_DIR:-/usr/share/makedeb/utils/}"
 
 cd ./
 declare files="$(ls)"
@@ -86,24 +95,19 @@
 
 source "${FILE}"
 pkgbuild_check
+"${makepkg_package_name}" --format-makedeb --lint -p "${FILE}"
+
 convert_version
 check_architecture
+check_distro_dependencies
+remove_dependency_description
+generate_prefix_fields
 
 # Set pkgbase
 pkgbase="${pkgbase:-${pkgname[0]}}"
 
 # Check if we're printing a generated control file
 if (( "${print_control}" )); then
-  # We want to put all values from 'pkgname' under a single 'Package' field.
-  # This isn't syntactically correct by Debian's policy for binary control
-  # fields, but it prevents us from having to repeat everything twice for
-  # multiple packages.
-
-  check_distro_dependencies
-  remove_dependency_description
-  generate_optdepends_fields
-  run_dependency_conversion
-
   generate_control "./${FILE}" "/dev/stdout"
   exit "${?}"
 fi
@@ -111,35 +115,25 @@
 msg "Making package: ${pkgbase} ${makedeb_package_version} ($(date '+%a %d %b %Y %T %p %Z'))..."
 find "${pkgdir}" &> /dev/null && rm "${pkgdir}" -rf
 
-# Check build dependencies
-if [[ "${target_os}" == "debian" ]]; then
+# Check build dependencies.
+if [[ "${skip_dependency_checks}" == "true" ]]; then
+  warning "Skipping dependency checks."
+else
   msg "Checking build dependencies..."
-
-  check_distro_dependencies
-
-  # Combine depends, makedepends and checkdepends all into depends.
-  dependency_packages=($(echo "${depends[@]}" "${makedepends[@]}" "${checkdepends[@]}" | \
-                         sed 's| |\n|g' | \
-                         sort -u | \
-                         tr -t '\n' ' '))
-
-  depends=("${dependency_packages[@]}")
-
-  remove_dependency_description
-  run_dependency_conversion
+  check_missing_dependencies
 
   if [[ "${install_dependencies}" == "true" ]]; then
-    check_dependencies
-    install_depends
-  elif [[ "${skip_dependency_checks}" != "true" ]]; then
-    check_dependencies
-    verify_dependencies
+    install_missing_dependencies
+  else
+    verify_no_missing_dependencies
   fi
 fi
 
+run_dependency_conversion
+
 msg "Entering fakeroot environment..."
 
-"${makepkg_package_name}" --format-makedeb -p "${FILE}" "${makepkg_args[@]}"
+"${makepkg_package_name}" --format-makedeb --nodeps -p "${FILE}" "${makepkg_args[@]}"
 
 # We keep tihs as a normal string (instead of an array) so that we can access
 # the variable inside of subshells. <https://stackoverflow.com/a/5564589>
@@ -156,8 +150,8 @@
 msg "Finished making: ${pkgbase} ${makedeb_package_version} ($(date '+%a %d %b %Y %T %p %Z'))."
 
 # Remove build dependencies
-if [[ "${target_os}" == "debian" && "${install_dependencies}" == "true" && "${remove_dependencies}" == "true" ]]; then
-  remove_dependencies
+if [[ "${remove_dependencies}" == "true" ]]; then
+  remove_installed_dependencies
 fi
 
 # Install built package
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/PKGBUILD makedeb/src/PKGBUILD
--- makedeb-7.1.2-bugfix1-stable/src/PKGBUILD	2021-10-21 00:57:18.000000000 -0700
+++ makedeb/src/PKGBUILD	1969-12-31 16:00:00.000000000 -0800
@@ -1,57 +0,0 @@
-# This PKGBUILD is used for local testing. Refer to the PKGBUILDs in
-# PKGBUILDs for the sources of MPR, AUR, and APT PKGBUILDs.
-
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-
-# Used to obtain folder names for local repository
-_gitdir=$(git rev-parse --show-toplevel)
-_foldername=$(basename "${_gitdir}")
-
-pkgname=makedeb
-pkgver=7.1.2+bugfix1
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (git release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'makedeb-makepkg-alpha')
-optdepends=('r!apt')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+file://${_gitdir}")
-sha256sums=('SKIP')
-
-prepare() {
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|" "${_foldername}/src/makedeb.sh"
-
-  # Remove prebuild commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' "${_foldername}/src/makedeb.sh"
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd "${srcdir}/${_foldername}"
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
diff --color -Nru makedeb-7.1.2-bugfix1-stable/src/utils/missing_apt_dependencies.py makedeb/src/utils/missing_apt_dependencies.py
--- makedeb-7.1.2-bugfix1-stable/src/utils/missing_apt_dependencies.py	1969-12-31 16:00:00.000000000 -0800
+++ makedeb/src/utils/missing_apt_dependencies.py	2021-11-01 13:35:59.980249317 -0700
@@ -0,0 +1,69 @@
+#!/usr/bin/env python3
+import apt_pkg
+import sys
+
+apt_pkg.init()
+cache = apt_pkg.Cache(None)
+
+missing_packages = []
+
+for i in sys.argv[1:]:
+    # Build the package relationship string for use by 'apt-get satisfy'.
+    relationship_operator = None
+    
+    for j in ["<=", ">=", "<", ">", "="]:
+        if j in i:
+            relationship_operator = j
+            break
+    
+    if relationship_operator is not None:
+        if relationship_operator in ["<", ">"]:
+            relationship_operator_formatted = j + j
+        else:
+            relationship_operator_formatted = j
+            
+        package = i.split(relationship_operator)
+        pkgname = package[0]
+        pkgver = package[1]
+        package_string = f"{pkgname} ({relationship_operator_formatted} {pkgver})"
+    else:
+        pkgname = i
+        pkgver = None
+        package_string = pkgname
+        
+    # Check the cache for the package.
+    try:
+        cache[pkgname]
+    except KeyError:
+        missing_packages += [pkgname]
+        continue
+    
+    if cache[pkgname].current_state != apt_pkg.CURSTATE_INSTALLED:
+        missing_packages += [package_string]
+    else:
+        if pkgver is None:
+            continue
+        
+        installed_pkgver = cache[pkgname].current_ver.ver_str
+        version_status = apt_pkg.version_compare(installed_pkgver, pkgver)
+        
+        if relationship_operator == "<":
+            if version_status >= 0:
+                missing_packages += [package_string]
+        elif relationship_operator == ">":
+            if version_status <= 0:
+                missing_packages += [package_string]
+        elif relationship_operator == "<=":
+            if version_status > 0:
+                missing_packages += [package_string]
+        elif relationship_operator == ">=":
+            if version_status < 0:
+                missing_packages += [package_string]
+        elif relationship_operator == "=":
+            if version_status != 0:
+                missing_packages += [package_string]
+
+for i in missing_packages:
+    print(i)
+
+exit(0)
