Upstream changes from PR
Index: makedeb/.drone/drone.jsonnet
===================================================================
--- makedeb.orig/.drone/drone.jsonnet	2021-11-01 13:09:00.916383459 -0700
+++ makedeb/.drone/drone.jsonnet	2021-11-01 13:08:47.776322866 -0700
@@ -14,39 +14,39 @@
 		},
 
 		commands: [
-			"sudo apt-get install openssh-client git -y",
+			"sudo apt-get install openssh-client git -yq",
 			".drone/scripts/create_tag.sh"
 		]
 	}]
 };
 
 local buildAndPublish(package_name, tag) = {
-    name: "build-and-publish-" + tag,
-    kind: "pipeline",
-    type: "docker",
-    trigger: {branch: [tag]},
+	name: "build-and-publish-" + tag,
+	kind: "pipeline",
+	type: "docker",
+	trigger: {branch: [tag]},
 	depends_on: ["create-tag-" + tag],
-    steps: [
-        {
-            name: "build-debian-package",
-            image: "proget.hunterwittenborn.com/docker/makedeb/makedeb-alpha:ubuntu-focal",
-            environment: {release_type: tag, package_name: package_name},
-            commands: [
-							"sudo apt-get install sed grep mawk git -y",
-							".drone/scripts/build.sh"
-						]
-        },
-
-        {
-            name: "publish-proget",
-            image: "proget.hunterwittenborn.com/docker/makedeb/makedeb-alpha:ubuntu-focal",
-            environment: {proget_api_key: {from_secret: "proget_api_key"}},
-            commands: [
-							"sudo apt-get install sed grep curl findutils -y",
-							".drone/scripts/publish.sh"
-						]
-        }
-    ]
+	steps: [
+		{
+			name: "build-debian-package",
+			image: "proget.hunterwittenborn.com/docker/makedeb/makedeb-alpha:ubuntu-focal",
+			environment: {release_type: tag, package_name: package_name},
+			commands: [
+				"sudo apt-get install sed grep mawk git -yq",
+				".drone/scripts/build.sh"
+			]
+        	},
+
+		{
+			name: "publish-proget",
+			image: "proget.hunterwittenborn.com/docker/makedeb/makedeb-alpha:ubuntu-focal",
+			environment: {proget_api_key: {from_secret: "proget_api_key"}},
+			commands: [
+				"sudo apt-get install sed grep curl findutils -yq",
+				".drone/scripts/publish.sh"
+			]
+		}
+	]
 };
 
 local userRepoPublish(package_name, tag, user_repo) = {
@@ -71,7 +71,7 @@
 		},
 
 		commands: [
-			"sudo apt-get install git ssh grep mawk sed -y",
+			"sudo apt-get install git ssh grep mawk sed -yq",
 			".drone/scripts/user-repo.sh"
 		]
 	}]
@@ -108,9 +108,9 @@
 	createTag("beta"),
 	createTag("alpha"),
 
-  buildAndPublish("makedeb", "stable"),
-  buildAndPublish("makedeb-beta", "beta"),
-  buildAndPublish("makedeb-alpha", "alpha"),
+	buildAndPublish("makedeb", "stable"),
+	buildAndPublish("makedeb-beta", "beta"),
+	buildAndPublish("makedeb-alpha", "alpha"),
 
 	userRepoPublish("makedeb", "stable", "mpr"),
 	userRepoPublish("makedeb-beta", "beta", "mpr"),
Index: makedeb/.drone/scripts/build.sh
===================================================================
--- makedeb.orig/.drone/scripts/build.sh	2021-11-01 13:09:00.916383459 -0700
+++ makedeb/.drone/scripts/build.sh	2021-11-01 13:08:47.776322866 -0700
@@ -1,20 +1,31 @@
 #!/usr/bin/env bash
-set -exuo pipefail
+set -e
 sudo chown 'makedeb:makedeb' ./ -R
 
-# Install predependencies makedeb needs to properly build itself.
-sudo apt install -qqy python3-apt
+# Build makedeb.
+export TARGET=local
+export RELEASE="${release_type}"
 
-# Get variables
-pkgver="$(cat 'src/PKGBUILD' | grep '^pkgver=' | awk -F '=' '{print $2}')"
+read PKGVER PKGREL < <(echo "${DRONE_COMMIT_MESSAGE}" | grep '^Package Version:' | awk -F ': ' '{print $2}' | sed 's|-| |g')
 
-# Copy PKGBUILD
-rm 'src/PKGBUILD'
-cp "PKGBUILDs/LOCAL/${release_type^^}.PKGBUILD" "src/PKGBUILD"
-
-# Configure PKGBUILD
-sed -i "s|pkgver={pkgver}|pkgver=${pkgver}|" 'src/PKGBUILD'
-
-# Build makedeb
-cd src
-./makedeb.sh --sync-deps --no-confirm
+for i in PKGVER PKGREL; do
+	if [[ "${!i}" == "" ]]; then
+		echo "ERROR: ${i} isn't set."
+		echo "Please make sure your commit message contained a 'Package Version' line."
+		bad_commit_message="x"
+	fi
+done
+
+if [[ "${bad_commit_meesage:+x}" == "x" ]]; then
+	echo "COMMIT MESSAGE:"
+	echo "==============="
+	echo "${DRONE_COMMIT_MESSAGE}"
+	exit 1
+fi
+
+export PKGVER PKGREL
+
+cd PKGBUILD/
+./pkgbuild.sh > PKGBUILD
+
+makedeb -s --no-confirm
Index: makedeb/.drone/scripts/create_tag.sh
===================================================================
--- makedeb.orig/.drone/scripts/create_tag.sh	2021-11-01 13:09:00.916383459 -0700
+++ makedeb/.drone/scripts/create_tag.sh	2021-11-01 13:08:47.776322866 -0700
@@ -1,5 +1,5 @@
 #!/usr/bin/env bash
-set -exuo pipefail
+set -e
 sudo chown 'makedeb:makedeb' ./ -R
 
 # Set up SSH
@@ -17,8 +17,23 @@
 chmod 500 "/${HOME}/.ssh/"* -R
 
 # Get current package version
-package_version="$(cat "src/PKGBUILD" | grep '^pkgver=' | awk -F '=' '{print $2}')"
+read PKGVER PKGREL < <(echo "${DRONE_COMMIT_MESSAGE}" | grep '^Package Version:' | awk -F ': ' '{print $2}' | sed 's|-| |g')
+
+for i in PKGVER PKGREL; do
+	if [[ "${!i}" == "" ]]; then
+		echo "ERROR: ${i} isn't set."
+		echo "Please make sure your commit message contained a 'Package Version' line."
+		bad_commit_message="x"
+	fi
+done
+
+if [[ "${bad_commit_meesage:+x}" == "x" ]]; then
+	echo "COMMIT MESSAGE:"
+	echo "==============="
+	echo "${DRONE_COMMIT_MESSAGE}"
+	exit 1
+fi
 
 # Create and push release
-git tag "v${package_version}-${release_type}" -am ""
-git push "ssh://git@${github_url}/makedeb/makedeb" "v${package_version}-${release_type}"
+git tag "v${PKGVER}-${release_type}" -am ""
+git push "ssh://git@${github_url}/makedeb/makedeb" "v${PKGVER}-${release_type}"
Index: makedeb/.drone/scripts/publish.sh
===================================================================
--- makedeb.orig/.drone/scripts/publish.sh	2021-11-01 13:09:00.916383459 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,38 +0,0 @@
-#!/usr/bin/env bash
-set -e
-
-cd src
-pkgbuild_data="$(cat PKGBUILD)"
-
-component_name="$(echo "${pkgbuild_data}" | grep 'pkgname=' | sed 's|pkgname=||')"
-component_pkgver="$(echo "${pkgbuild_data}" | grep 'pkgver=' | sed 's|pkgver=||')"
-component_pkgrel="$(echo "${pkgbuild_data}" | grep 'pkgrel=' | sed 's|pkgrel=||')"
-
-# Check for build debs
-deb_packages=$(find *.deb 2> /dev/null)
-deb_packages_count=$(echo "${deb_packages}" | wc -w)
-
-if [[ "${deb_packages_count}" == "0" ]]; then
-    echo "ERROR: There doesn't appear to be any packages present."
-    exit 1
-
-elif [[ "${deb_packages_count}" -gt "1" ]]; then
-    echo "ERROR: More than one package is present."
-    exit 1
-fi
-
-# Upload packages.
-echo "Uploading ${deb_packages} to ${proget_server}..."
-
-curl_output="$(curl "https://${proget_server}/debian-packages/upload/makedeb/main/${deb_packages}" \
-            --user "api:${proget_api_key}" \
-            --upload-file "${deb_packages}")"
-
-# Verify that package was uploaded successfully.
-expected_curl_output="Package is now available at </_feeds/makedeb/main/${component_name}:all/${component_pkgver}-${component_pkgrel}>."
-
-if [[ "${curl_output}" != "${expected_curl_output}" ]]; then
-  echo "${curl_output}"
-  echo "Aborting due to unexpected output from curl."
-  exit 1
-fi
Index: makedeb/.drone/scripts/user-repo.sh
===================================================================
--- makedeb.orig/.drone/scripts/user-repo.sh	2021-11-01 13:09:00.916383459 -0700
+++ makedeb/.drone/scripts/user-repo.sh	2021-11-01 13:08:47.776322866 -0700
@@ -1,8 +1,26 @@
 #!/usr/bin/env bash
-set -exuo pipefail
+set -e
 sudo chown 'makedeb:makedeb' ./ -R
 
-# Set up SSH
+# Get package version.
+read PKGVER PKGREL < <(echo "${DRONE_COMMIT_MESSAGE}" | grep '^Package Version:' | awk -F ': ' '{print $2}' | sed 's|-| |g')
+
+for i in PKGVER PKGREL; do
+	if [[ "${!i}" == "" ]]; then
+		echo "ERROR: ${i} isn't set."
+		echo "Please make sure your commit message contained a 'Package Version' line."
+		bad_commit_message="x"
+	fi
+done
+
+if [[ "${bad_commit_meesage:+x}" == "x" ]]; then
+	echo "COMMIT MESSAGE:"
+	echo "==============="
+	echo "${DRONE_COMMIT_MESSAGE}"
+	exit 1
+fi
+
+# Set up SSH.
 rm -rf "/${HOME}/.ssh"
 mkdir -p "/${HOME}/.ssh"
 
@@ -23,28 +41,25 @@
 
 chmod 500 "/${HOME}/.ssh/"* -R
 
-# Clone AUR/MPR Package
+# Clone AUR/MPR Package.
 if [[ "${target_repo}" == "mpr" ]]; then
 	git clone "ssh://mpr@${mpr_url}/${package_name}.git" "${package_name}_${target_repo}"
-
 else
 	git clone "ssh://aur@${aur_url}/${package_name}.git" "${package_name}_${target_repo}"
-
 fi
 
-# Copy PKGBUILD to user repo
-rm "${package_name}_${target_repo}/PKGBUILD"
-cp "PKGBUILDs/${target_repo^^}/${release_type^^}.PKGBUILD" "${package_name}_${target_repo}/PKGBUILD"
-
-# Get current pkgver and pkgrel
-pkgver="$(cat src/PKGBUILD | grep '^pkgver=' | awk -F '=' '{print $2}')"
-pkgrel="$(cat src/PKGBUILD | grep '^pkgrel=' | awk -F '=' '{print $2}')"
+# Copy PKGBUILD to user repo.
+export TARGET="${target_repo}"
+export RELEASE="${release_type}"
+export PKGVER
+export PKGREL
 
-# Set package version in PKGBUILD
-sed -i "s|^pkgver={pkgver}|pkgver=${pkgver}|" "${package_name}_${target_repo}/PKGBUILD"
+rm "${package_name}_${target_repo}/PKGBUILD"
+cd PKGBUILD/
+./pkgbuild.sh > "../${package_name}_${target_repo}/PKGBUILD"
 
 # Create .SRCINFO file
-cd "${package_name}_${target_repo}"
+cd "../${package_name}_${target_repo}"
 
 makedeb --printsrcinfo | tee .SRCINFO
 
@@ -60,6 +75,6 @@
 
 # Commit changes and push
 git add PKGBUILD .SRCINFO
-git commit -m "Updated version to ${pkgver}-${pkgrel}"
+git commit -m "Updated version to ${PKGVER}-${PKGREL}"
 
 git push
Index: makedeb/Makefile
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ makedeb/Makefile	2021-11-01 13:08:47.776322866 -0700
@@ -0,0 +1,39 @@
+MAKEDEB_MAN_EPOCH = "$(shell git log -1 --pretty='%ct' man/makedeb.8.adoc)"
+PKGBUILD_MAN_EPOCH = "$(shell git log -1 --pretty='%ct' man/pkgbuild.5.adoc)"
+LATEST_STABLE_VERSION = "$(shell git tag | grep 'stable$$' | sort -Vr | head -n 1 | sed -e 's|-stable$$||' -e 's|^v||' )"
+.ONESHELL:
+
+all:
+	true
+
+prepare:
+	sed -i 's|$$$${pkgver}|$(PKGVER)|' src/makedeb.sh
+	sed -i 's|$$$${release}|$(RELEASE)|' src/makedeb.sh
+	sed -i 's|$$$${target}|$(TARGET)|' src/makedeb.sh
+	find src/makedeb.sh src/functions/ -type f -exec sed -i 's|^.*# REMOVE AT PACKAGING$$||' '{}' \;
+	
+	sed -i 's|$$$${pkgver}|$(PKGVER)|' man/makedeb.8.adoc
+	sed -i 's|$$$${pkgver}|$(PKGVER)|' man/pkgbuild.5.adoc
+
+package:
+	mkdir -p "$(DESTDIR)/usr/bin"
+	echo '#!/usr/bin/env bash' > "$(DESTDIR)/usr/bin/makedeb"
+	find src/functions/ -type f -exec cat '{}' \; >> "$(DESTDIR)/usr/bin/makedeb"
+	cat "src/makedeb.sh" >> "$(DESTDIR)/usr/bin/makedeb"
+	chmod 755 "$(DESTDIR)/usr/bin/makedeb"
+	
+	cd ./src/utils
+	find ./ -type f -exec install -Dm 755 '{}' "$(DESTDIR)/usr/share/makedeb/utils/{}" \;
+	cd ../../
+	
+	export SOURCE_DATE_EPOCH="$(MAKEDEB_MAN_EPOCH)"
+	asciidoctor -b manpage man/makedeb.8.adoc -o "$(DESTDIR)/usr/share/man/man8/makedeb.8"
+	
+	export SOURCE_DATE_EPOCH="$(PKGBUILD_MAN_EPOCH)"
+	asciidoctor -b manpage man/pkgbuild.5.adoc -o "$(DESTDIR)/usr/share/man/man5/pkgbuild.5"
+
+# This is for use by dpkg-buildpackage. Please use prepare and package instead.
+install:
+	$(MAKE) prepare PKGVER="$(LATEST_STABLE_VERSION)" RELEASE=stable TARGET=local
+	$(MAKE) package DESTDIR="$(DESTDIR)"
+
Index: makedeb/PKGBUILDs/AUR/ALPHA.PKGBUILD
===================================================================
--- makedeb.orig/PKGBUILDs/AUR/ALPHA.PKGBUILD	2021-11-01 13:09:00.920383477 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,63 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=alpha
-
-pkgname=makedeb-alpha
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('tar' 'binutils' 'lsb-release' 'dpkg' 'asciidoctor' 'makedeb-makepkg-alpha')
-makedepends=('git')
-conflicts=('makedeb' 'makedeb-beta')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version, release type, and target OS
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-  sed -i "s|{pkgver}|${pkgver}|" ./man/makedeb.8.adoc
-  sed -i "s|{pkgver}|${pkgver}|" ./man/pkgbuild.5.adoc
-  sed -i 's|target_os="debian"|target_os="arch"|' src/makedeb.sh
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-  
-  # Copy over extra utilities.
-  cd ./src/utils/
-  find ./ -type f -exec install -Dm 755 '{}' "${pkgdir}/usr/share/makedeb/utils/{}" \;
-  cd ../../
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
Index: makedeb/PKGBUILDs/AUR/BETA.PKGBUILD
===================================================================
--- makedeb.orig/PKGBUILDs/AUR/BETA.PKGBUILD	2021-11-01 13:09:00.920383477 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,63 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=beta
-
-pkgname=makedeb-beta
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('tar' 'binutils' 'lsb-release' 'dpkg' 'asciidoctor' 'makedeb-makepkg-beta')
-makedepends=('git')
-conflicts=('makedeb' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version, release type, and target OS
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-  sed -i "s|{pkgver}|${pkgver}|" ./man/makedeb.8.adoc
-  sed -i "s|{pkgver}|${pkgver}|" ./man/pkgbuild.5.adoc
-  sed -i 's|target_os="debian"|target_os="arch"|' src/makedeb.sh
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-  
-  # Copy over extra utilities.
-  cd ./src/utils/
-  find ./ -type f -exec install -Dm 755 '{}' "${pkgdir}/usr/share/makedeb/utils/{}" \;
-  cd ../../
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
Index: makedeb/PKGBUILDs/AUR/STABLE.PKGBUILD
===================================================================
--- makedeb.orig/PKGBUILDs/AUR/STABLE.PKGBUILD	2021-11-01 13:09:00.920383477 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,63 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=stable
-
-pkgname=makedeb
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('tar' 'binutils' 'lsb-release' 'dpkg' 'asciidoctor' 'makedeb-makepkg')
-makedepends=('git')
-conflicts=('makedeb-beta' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version, release type, and target OS
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-  sed -i "s|{pkgver}|${pkgver}|" ./man/makedeb.8.adoc
-  sed -i "s|{pkgver}|${pkgver}|" ./man/pkgbuild.5.adoc
-  sed -i 's|target_os="debian"|target_os="arch"|' src/makedeb.sh
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-  
-  # Copy over extra utilities.
-  cd ./src/utils/
-  find ./ -type f -exec install -Dm 755 '{}' "${pkgdir}/usr/share/makedeb/utils/{}" \;
-  cd ../../
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
Index: makedeb/PKGBUILDs/LOCAL/ALPHA.PKGBUILD
===================================================================
--- makedeb.orig/PKGBUILDs/LOCAL/ALPHA.PKGBUILD	2021-11-01 13:09:00.920383477 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,65 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=alpha
-
-# Used to obtain folder names for local repository
-_gitdir=$(git rev-parse --show-toplevel)
-_foldername=$(basename "${_gitdir}")
-
-pkgname=makedeb-alpha
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (alpha release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'python3' 'python3-apt' 'asciidoctor' 'makedeb-makepkg-alpha')
-optdepends=('r!apt')
-conflicts=('makedeb' 'makedeb-beta')
-provides=('makedeb')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+file://${_gitdir}")
-sha256sums=('SKIP')
-
-prepare() {
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|" "${_foldername}/src/makedeb.sh"
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" "${_foldername}/src/makedeb.sh"
-  sed -i "s|{pkgver}|${pkgver}|" ./man/makedeb.8.adoc
-  sed -i "s|{pkgver}|${pkgver}|" ./man/pkgbuild.5.adoc
-
-  # Remove prebuild commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' "${_foldername}/src/makedeb.sh"
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd "${srcdir}/${_foldername}"
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-  
-  # Copy over extra utilities.
-  cd ./src/utils/
-  find ./ -type f -exec install -Dm 755 '{}' "${pkgdir}/usr/share/makedeb/utils/{}" \;
-  cd ../../
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
Index: makedeb/PKGBUILDs/LOCAL/BETA.PKGBUILD
===================================================================
--- makedeb.orig/PKGBUILDs/LOCAL/BETA.PKGBUILD	2021-11-01 13:09:00.920383477 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,65 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=beta
-
-# Used to obtain folder names for local repository
-_gitdir=$(git rev-parse --show-toplevel)
-_foldername=$(basename "${_gitdir}")
-
-pkgname=makedeb-beta
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (beta release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'python3' 'python3-apt' 'asciidoctor' 'makedeb-makepkg-beta')
-optdepends=('r!apt')
-conflicts=('makedeb' 'makedeb-alpha')
-provides=('makedeb')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+file://${_gitdir}")
-sha256sums=('SKIP')
-
-prepare() {
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|" "${_foldername}/src/makedeb.sh"
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" "${_foldername}/src/makedeb.sh"
-  sed -i "s|{pkgver}|${pkgver}|" ./man/makedeb.8.adoc
-  sed -i "s|{pkgver}|${pkgver}|" ./man/pkgbuild.5.adoc
-
-  # Remove prebuild commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' "${_foldername}/src/makedeb.sh"
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd "${srcdir}/${_foldername}"
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-  
-  # Copy over extra utilities.
-  cd ./src/utils/
-  find ./ -type f -exec install -Dm 755 '{}' "${pkgdir}/usr/share/makedeb/utils/{}" \;
-  cd ../../
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
Index: makedeb/PKGBUILDs/LOCAL/STABLE.PKGBUILD
===================================================================
--- makedeb.orig/PKGBUILDs/LOCAL/STABLE.PKGBUILD	2021-11-01 13:09:00.920383477 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,64 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=stable
-
-# Used to obtain folder names for local repository
-_gitdir=$(git rev-parse --show-toplevel)
-_foldername=$(basename "${_gitdir}")
-
-pkgname=makedeb
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (stable release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'python3' 'python3-apt' 'asciidoctor' 'makedeb-makepkg')
-optdepends=('r!apt')
-conflicts=('makedeb-beta' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+file://${_gitdir}")
-sha256sums=('SKIP')
-
-prepare() {
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|" "${_foldername}/src/makedeb.sh"
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" "${_foldername}/src/makedeb.sh"
-  sed -i "s|{pkgver}|${pkgver}|" ./man/makedeb.8.adoc
-  sed -i "s|{pkgver}|${pkgver}|" ./man/pkgbuild.5.adoc
-
-  # Remove prebuild commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' "${_foldername}/src/makedeb.sh"
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd "${srcdir}/${_foldername}"
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-  
-  # Copy over extra utilities.
-  cd ./src/utils/
-  find ./ -type f -exec install -Dm 755 '{}' "${pkgdir}/usr/share/makedeb/utils/{}" \;
-  cd ../../
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
Index: makedeb/PKGBUILDs/MPR/ALPHA.PKGBUILD
===================================================================
--- makedeb.orig/PKGBUILDs/MPR/ALPHA.PKGBUILD	2021-11-01 13:09:00.920383477 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,63 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=alpha
-
-pkgname=makedeb-alpha
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'python3' 'python3-apt' 'asciidoctor' 'makedeb-makepkg-alpha')
-makedepends=('git')
-optdepends=('apt' 'git')
-conflicts=('makedeb' 'makedeb-beta')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-  sed -i "s|{pkgver}|${pkgver}|" ./man/makedeb.8.adoc
-  sed -i "s|{pkgver}|${pkgver}|" ./man/pkgbuild.5.adoc
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-  
-  # Copy over extra utilities.
-  cd ./src/utils/
-  find ./ -type f -exec install -Dm 755 '{}' "${pkgdir}/usr/share/makedeb/utils/{}" \;
-  cd ../../
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
Index: makedeb/PKGBUILDs/MPR/BETA.PKGBUILD
===================================================================
--- makedeb.orig/PKGBUILDs/MPR/BETA.PKGBUILD	2021-11-01 13:09:00.920383477 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,63 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=beta
-
-pkgname=makedeb-beta
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'python3' 'python3-apt' 'asciidoctor' 'makedeb-makepkg-beta')
-makedepends=('git')
-optdepends=('apt' 'git')
-conflicts=('makedeb' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-  sed -i "s|{pkgver}|${pkgver}|" ./man/makedeb.8.adoc
-  sed -i "s|{pkgver}|${pkgver}|" ./man/pkgbuild.5.adoc
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-  
-  # Copy over extra utilities.
-  cd ./src/utils/
-  find ./ -type f -exec install -Dm 755 '{}' "${pkgdir}/usr/share/makedeb/utils/{}" \;
-  cd ../../
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
Index: makedeb/PKGBUILDs/MPR/STABLE.PKGBUILD
===================================================================
--- makedeb.orig/PKGBUILDs/MPR/STABLE.PKGBUILD	2021-11-01 13:09:00.920383477 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,63 +0,0 @@
-# Maintainer: Hunter Wittenborn: <hunter@hunterwittenborn.com>
-_release_type=stable
-
-pkgname=makedeb
-pkgver={pkgver}
-pkgrel=1
-pkgdesc="The modern packaging tool for Debian archives (${_release_type} release)"
-arch=('any')
-license=('GPL3')
-depends=('bash' 'binutils' 'tar' 'file' 'lsb-release' 'python3' 'python3-apt' 'asciidoctor' 'makedeb-makepkg')
-makedepends=('git')
-optdepends=('apt' 'git')
-conflicts=('makedeb-beta' 'makedeb-alpha')
-url="https://github.com/makedeb/makedeb"
-
-source=("git+${url}/#tag=v${pkgver}-${_release_type}")
-sha256sums=('SKIP')
-
-prepare() {
-  cd makedeb/
-
-  # Set package version and release type
-  sed -i "s|makedeb_package_version=.*|makedeb_package_version=${pkgver}-${pkgrel}|"  src/makedeb.sh
-  sed -i "s|makedeb_release_type=.*|makedeb_release_type=${_release_type}|" src/makedeb.sh
-  sed -i "s|{pkgver}|${pkgver}|" ./man/makedeb.8.adoc
-  sed -i "s|{pkgver}|${pkgver}|" ./man/pkgbuild.5.adoc
-
-  # Remove testing commands
-  sed -i 's|.*# REMOVE AT PACKAGING||g' src/makedeb.sh
-}
-
-package() {
-  # Create single file for makedeb
-  mkdir -p "${pkgdir}/usr/bin"
-  cd makedeb/
-
-  # Add bash shebang
-  echo '#!/usr/bin/env bash' > "${pkgdir}/usr/bin/makedeb"
-
-  # Copy functions
-  for i in $(find "src/functions/"); do
-    if ! [[ -d "${i}" ]]; then
-      cat "${i}" >> "${pkgdir}/usr/bin/makedeb"
-    fi
-  done
-
-  cat "src/makedeb.sh" >> "${pkgdir}/usr/bin/makedeb"
-  chmod 555 "${pkgdir}/usr/bin/makedeb"
-  
-  # Copy over extra utilities.
-  cd ./src/utils/
-  find ./ -type f -exec install -Dm 755 '{}' "${pkgdir}/usr/share/makedeb/utils/{}" \;
-  cd ../../
-
-  # Set up man pages
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/makedeb.8.adoc)" \
-    asciidoctor -b manpage man/makedeb.8.adoc \
-                -o "${pkgdir}/usr/share/man/man8/makedeb.8"
-
-  SOURCE_DATE_EPOCH="$(git log -1 --pretty='%ct' man/pkgbuild.5.adoc)" \
-    asciidoctor -b manpage man/pkgbuild.5.adoc \
-                -o "${pkgdir}/usr/share/man/man5/pkgbuild.5"
-}
Index: makedeb/PKGBUILDs/README.md
===================================================================
--- makedeb.orig/PKGBUILDs/README.md	2021-11-01 13:09:00.916383459 -0700
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,3 +0,0 @@
-Some of the variables inside these PKGBUILDs (variables without `$` characters) are taken from `src/PKGBUILD` during CI deployments.
-
-To find the relevant variables, find the corresponding value in `src/PKGBUILD`, which will be located under the same variable name.
Index: makedeb/man/makedeb.8.adoc
===================================================================
--- makedeb.orig/man/makedeb.8.adoc	2021-11-01 13:09:00.920383477 -0700
+++ makedeb/man/makedeb.8.adoc	2021-11-01 13:08:47.780322887 -0700
@@ -2,7 +2,7 @@
 :doctype: manpage
 :hardbreaks:
 :manmanual: makedeb manual pages
-:mansource: MAKEDEB {version}
+:mansource: MAKEDEB $${pkgver}
 
 == NAME
 makedeb - the modern packaging tool for Debian archives
Index: makedeb/man/pkgbuild.5.adoc
===================================================================
--- makedeb.orig/man/pkgbuild.5.adoc	2021-11-01 13:09:00.920383477 -0700
+++ makedeb/man/pkgbuild.5.adoc	2021-11-01 13:08:47.780322887 -0700
@@ -2,7 +2,7 @@
 :doctype: manpage
 :hardbreaks:
 :manmanual: makedeb manual pages
-:mansource: MAKEDEB {pkgver}
+:mansource: MAKEDEB $${pkgver}
 
 == NAME
 PKGBUILD - file format used by makedeb(8)
Index: makedeb/src/functions/help.sh
===================================================================
--- makedeb.orig/src/functions/help.sh	2021-11-01 13:09:00.920383477 -0700
+++ makedeb/src/functions/help.sh	2021-11-01 13:08:47.780322887 -0700
@@ -1,55 +1,51 @@
 help() {
-  if [[ "${target_os}" == "debian" ]]; then
-    echo "makedeb (${makedeb_package_version}) - Create Debian archives from PKGBUILDs"
-    echo "Usage: makedeb [options]"
-    echo
-    echo "makedeb takes PKGBUILD files and builds archives installable with APT"
-    echo
-    echo "Options:"
-    echo "  -A, --ignore-arch    Ignore errors about mismatching architectures"
-    echo "  -d, --no-deps        Skip all dependency checks"
-    echo "  -F, --file, -p       Specify a build file other than 'PKGBUILD'"
-    echo "  -g, --gen-integ      Generate hashes for source files"
-    echo "  -h, --help           Show this help menu and exit"
-    echo "  -H, --field          Append the resulting control file with custom fields"
-    echo "  -i, --install        Automatically install package(s) after building"
-    echo "  -V, --version        Print version information and exit"
-    echo "  -r, --rm-deps        Remove installed dependencies after building"
-    echo "  -s, --sync-deps      Install missing dependencies"
-    echo "  --print-control      Print a generated control file and exit"
-    echo "  --print-srcinfo      Print a generated .SRCINFO file and exit"
-    echo "  --skip-pgp-check     Do not verify source files against PGP signatures"
-    echo "  --verbose            Print (very) detailed logging"
-    echo
-    echo "The following options can modify the behavior of APT:"
-    echo "  --as-deps             Mark built packages as automatically installed (when using '-i')"
-    echo "  --no-confirm          Don't ask before installing packages"
-    echo
-    echo "Report bugs at https://github.com/hwittenborn/makedeb"
+	echo "makedeb ${makedeb_package_version} (${makedeb_release_type}, ${makedeb_release_target})"
+	echo "Usage: makedeb [options]"
+	echo
+	echo "makedeb takes PKGBUILD files and creates archives installable via APT"
+	echo
+  
+	if [[ "${target_os}" == "debian" ]]; then
+		echo "Options:"
+		echo "  -A, --ignore-arch    Ignore errors about mismatching architectures"
+		echo "  -d, --no-deps        Skip all dependency checks"
+		echo "  -F, --file, -p       Specify a build file other than 'PKGBUILD'"
+		echo "  -g, --gen-integ      Generate hashes for source files"
+		echo "  -h, --help           Show this help menu and exit"
+		echo "  -H, --field          Append the resulting control file with custom fields"
+		echo "  -i, --install        Automatically install package(s) after building"
+		echo "  -V, --version        Print version information and exit"
+		echo "  -r, --rm-deps        Remove installed dependencies after building"
+		echo "  -s, --sync-deps      Install missing dependencies"
+		echo "  --print-control      Print a generated control file and exit"
+		echo "  --print-srcinfo      Print a generated .SRCINFO file and exit"
+		echo "  --skip-pgp-check     Do not verify source files against PGP signatures"
+		echo "  --verbose            Print (very) detailed logging"
+		echo
+		echo "The following options can modify the behavior of APT:"
+		echo "  --as-deps             Mark built packages as automatically installed (when using '-i')"
+		echo "  --no-confirm          Don't ask before installing packages"
 
-  elif [[ "${target_os}" == "arch" ]]; then
-    echo "makedeb (${makedeb_package_version}) - Create Debian archives from PKGBUILDs"
-    echo "Usage: makedeb [options]"
-    echo
-    echo "makedeb takes PKGBUILD files and builds archives installable with APT"
-    echo
-    echo "Options:"
-    echo "  -A, --ignore-arch    Ignore errors about mismatching architectures"
-    echo "  -d, --no-deps        Skip all dependency checks"
-    echo "  -F, --file, -p       Specify a build file other than 'PKGBUILD'"
-    echo "  -g, --gen-integ      Generate hashes for source files"
-    echo "  -h, --help           Show this help menu and exit"
-    echo "  -H, --field          Append the resulting control file with custom fields"
-    echo "  -r, --rm-deps        Remove installed dependencies after building"
-    echo "  -V, --version        Print version info and exit"
-    echo "  -s, --sync-deps      Install missing dependencies"
-    echo "  --print-control      Print a generated control file and exit"
-    echo "  --verbose            Print (very) detailed logging"
-    echo "  --print-src-info     Print a generated .SRCINFO file and exit"
-    echo "  --skip-pgp-check     Do not verify source files against PGP signatures"
-    echo
-    echo "  The following options can modify the behavior of pacman:"
-    echo "    --no-confirm       Don't ask before install dependencies"
-    echo "Report bugs at https://github.com/hwittenborn/makedeb"
-  fi
+	elif [[ "${target_os}" == "arch" ]]; then
+		echo "Options:"
+		echo "  -A, --ignore-arch    Ignore errors about mismatching architectures"
+		echo "  -d, --no-deps        Skip all dependency checks"
+		echo "  -F, --file, -p       Specify a build file other than 'PKGBUILD'"
+		echo "  -g, --gen-integ      Generate hashes for source files"
+		echo "  -h, --help           Show this help menu and exit"
+		echo "  -H, --field          Append the resulting control file with custom fields"
+		echo "  -r, --rm-deps        Remove installed dependencies after building"
+		echo "  -V, --version        Print version info and exit"
+		echo "  -s, --sync-deps      Install missing dependencies"
+		echo "  --print-control      Print a generated control file and exit"
+		echo "  --verbose            Print (very) detailed logging"
+		echo "  --print-src-info     Print a generated .SRCINFO file and exit"
+		echo "  --skip-pgp-check     Do not verify source files against PGP signatures"
+		echo
+		echo "  The following options can modify the behavior of pacman:"
+		echo "    --no-confirm       Don't ask before install dependencies"
+	fi
+
+	echo
+	echo "See makedeb(8) for information on available options and links for obtaining support."
 }
Index: makedeb/src/makedeb.sh
===================================================================
--- makedeb.orig/src/makedeb.sh	2021-11-01 13:09:00.924383494 -0700
+++ makedeb/src/makedeb.sh	2021-11-01 13:08:47.780322887 -0700
@@ -27,9 +27,16 @@
 declare package_convert="false"
 declare hide_control_output=0
 
-declare makedeb_package_version="git"
-declare makedeb_release_type="git"
-declare target_os="debian"
+declare makedeb_package_version="$${pkgver}"
+declare makedeb_release_type="$${release}"
+declare makedeb_release_target="$${target}"
+
+if [[ "${makedeb_release_target}" == "local" || "${makedeb_release_target}" == "mpr" ]]; then
+	declare target_os="debian"
+elif [[ "${makedeb_release_target}" == "arch" ]]; then
+	declare target_os="arch"
+fi
+
 declare makepkg_package_name="makedeb-makepkg"
 declare MAKEDEB_UTILS_DIR="./utils/" # REMOVE AT PACKAGING
 declare makedeb_utils_dir="${MAKEDEB_UTILS_DIR:-/usr/share/makedeb/utils/}"
